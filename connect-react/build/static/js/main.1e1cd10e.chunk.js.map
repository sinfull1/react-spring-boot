{"version":3,"sources":["api/login.interface.js","slices/auth.slice.js","sagas/sagas.js","rootReducer.js","store.js","settings.js","services/auth.service.js","components/login.component.js","components/register.component.js","components/home.component.js","helpers/columnDefHelper.js","components/modal.component.js","services/event.service.js","components/events.component.js","charts/CSLBlockView.js","charts/CSLBarView.js","charts/CSLSlider.js","charts/CSLTrackerView.js","charts/CSLContainer.js","helpers/history.js","services/upload-files.service.js","upload/upload-files.component.js","payment/example.tsx","payment/basic.example.tsx","payment/payment.component.tsx","App.js","serviceWorker.js","index.js"],"names":["callAPI","a","url","method","data","Axios","authSlice","createSlice","name","initialState","username","password","token","message","reducers","setToken","state","action","localStorage","setItem","payload","logout","removeItem","registerSuccess","actions","secureLogin","rootSaga","call","LoginApi","result","put","type","takeEvery","rootReducer","combineReducers","auth","authReducer","sagaMiddleware","createSagaMiddleware","middlewares","logger","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","run","saga","API_URL","axios","post","AUTH_API_URL","then","response","email","getItem","required","value","className","role","Login","props","useState","setUsername","setPassword","loading","dispatch","useDispatch","onSubmit","e","preventDefault","htmlFor","onChange","target","validations","disabled","isEmail","vusername","length","vpassword","Register","handleRegister","bind","onChangeUsername","onChangeEmail","onChangePassword","successful","this","setState","to","form","validateAll","checkBtn","context","_errors","catch","ref","c","style","display","Component","connect","Home","content","columnDefs","field","minWidth","checkboxSelection","filter","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","defaultColDef","flex","closeOnApply","customStyles","top","left","right","bottom","marginRight","transform","ModalComponent","React","textValue","setTextValue","modalIsOpen","setIsOpen","closeModal","submitfunc","onClick","titleName","isOpen","onAfterOpen","onRequestClose","contentLabel","textvalue","event","console","log","http","create","baseURL","headers","Authorization","id","EventSource","get","subsId","Math","random","toString","substr","sseEvents","EventService","getEventGridDataSourceBySubs","onopen","onerror","close","savedFilter","savedSelectedRows","options","choices","optionsSel","choicesSel","optionsPreset","Events","rowData","setRowData","gridApi","setGridApi","setGridColumnApi","forEach","key","label","setFilterModel","x","document","getElementsByClassName","item","undefined","innerHTML","deselectAll","forEachNodeAfterFilterAndSort","rowNode","index","Object","keys","map","row","setSelected","onmessage","update","JSON","parse","width","height","getEventDataById","selectedRow","getSelectedRows","newRowData","includes","removeRowData","textdata","alert","rows","stringify","push","removeAllSelection","removeAllFilters","filterCopy","getFilterModel","controlClassName","placeholderClassName","placeholder","onInput","setQuickFilter","getElementById","getRowNodeId","rowSelection","onGridReady","params","api","columnApi","immutableData","CSLBlockView","stocks","stock","stockCode","round","stockPrice","CSLBarView","firstRender","chart","drawChart","xScale","scaleBand","range","domain","s","stockName","padding","yScale","scaleLinear","select","node","attr","axisLeft","axisBottom","selectAll","enter","append","exit","remove","bandwidth","useStyles","makeStyles","root","ContinuousSlider","setValue","Typography","gutterBottom","Grid","container","spacing","xs","Slider","newValue","aria-labelledby","CSLTrackerView","Date","now","prevPrice","prevTime","initialTime","margin","widthOfSvg","baseVal","scaleTime","nice","curve","d3","hScale","points","variable","events","getPricesDataSource","CSLContainer","isLoading","lisStocks","eventSource","history","createBrowserHistory","file","onUploadProgress","formData","FormData","fileName","UploadFiles","selectFile","upload","clickView","publish","selectedFiles","currentFile","progress","fileInfos","publishInfo","UploadService","getFiles","getPublishFiles","files","loaded","total","URL","text","window","open","publishFile","deleteFile","table","aria-valuenow","aria-valuemin","aria-valuemax","delete","Example","title","children","BasicExample","environment","paymentRequest","apiVersion","apiVersionMinor","allowedPaymentMethods","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","amount","currencyCode","countryCode","onLoadPaymentData","existingPaymentMethodRequired","buttonColor","buttonType","GooglePayment","setAmount","setExistingPaymentMethodRequired","setButtonColor","setButtonType","defaultValue","onBlur","App","useSelector","currentUser","href","logOut","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"iiBAYe,M,sCATXA,Q,uCAAU,iCAAAC,EAAA,6DAAQC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,KAArB,kBACCC,IAAM,CACTH,MACAC,SACAC,UAJE,2C,uDCORE,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aATgB,CACjBC,SAAU,GACVC,SAAS,GACTC,MAAM,GACNC,QAAQ,IAMPC,SAAU,CACNC,SADM,SACGC,EAAOC,GAEb,OADAC,aAAaC,QAAQ,OAAOF,EAAOG,QAAQR,OACpC,CACHF,SAAUO,EAAOG,QAAQV,SACzBE,MAAOK,EAAOG,QAAQR,QAG7BS,OARM,SAQCL,EAAOC,GACVC,aAAaI,WAAW,SAE5BC,gBAXM,SAWUP,EAAMC,GAClBD,EAAMH,QAAS,iB,EAKQP,EAAUkB,QAA9BT,E,EAAAA,SAEAT,G,EAFUe,OAEVf,EAAf,S,WC5BiBmB,G,WAgBQC,GAhBlB,SAAUD,EAAYL,GAAtB,6EAGc,OAHd,WAE8BA,EAAQA,QAA9BV,EAFR,EAEQA,SAAUC,EAFlB,EAEkBA,SAFlB,SAGoBgB,aAAK,kBACpBC,EAAS5B,QAAQ,CACbE,IAAK,+BACLC,OAAQ,OACRC,KAAM,CAACM,SAAUA,EAAUC,SAAUA,QAP9C,OAUC,OAPIkB,EAHL,gBAUOC,YAAIf,EAAS,CAACL,SAASA,EAASE,MAAMiB,EAAOzB,KAAKQ,SAVzD,8BAYC,OAZD,mCAYOkB,YAAI,CAACC,KAAM,sBAZlB,qDAgBQ,SAAUL,IAAV,iEACX,OADW,SACLM,YAAU,eAAgBP,GADrB,uC,8BCTAQ,EANKC,YAAgB,CAChCC,KAAMC,ICAJC,EAAiBC,cACjBC,EAAc,CAACF,EAAgBG,KAC/BC,EAAQC,YAAe,CACzBC,QAASV,EACTW,WAAW,GAAD,mBAAMC,YAAqB,CAACC,OAAO,KAAYP,KAE7DF,EAAeU,IAAIC,GAQJP,Q,gDCnBFQ,EAAU,yB,GCmCR,I,8FA/BPvC,EAAUC,GACd,OAAOuC,IACJC,KAAKC,+BAAwB,CAAE1C,WAAUC,aACzC0C,MAAK,SAACC,GAIL,OAHIA,EAASlD,KAAKQ,OAChBM,aAAaC,QAAQ,OAAQmC,EAASlD,KAAKQ,OAEtC0C,EAASlD,U,+BAKpBc,aAAaI,WAAW,U,+BAGjBZ,EAAU6C,EAAO5C,GACxB,OAAOuC,IAAMC,KAAKC,kCAA2B,CAC3C1C,WACA6C,QACA5C,e,mCAIH,QAAIO,aAAasC,QAAQ,Y,+CCtBtBC,EAAW,SAACC,GACd,IAAKA,EACD,OACI,yBAAKC,UAAU,qBAAqBC,KAAK,SAAzC,4BAMG,SAASC,EAAMC,GAAQ,IAAD,EACDC,mBAAS,IADR,mBAC1BrD,EAD0B,KAChBsD,EADgB,OAEDD,mBAAS,IAFR,mBAE1BpD,EAF0B,KAEhBsD,EAFgB,OAGHF,mBAAS,IAHN,mBAG1BlD,EAH0B,aAIHkD,oBAAS,IAJN,mBAI1BG,EAJ0B,KAK3BC,GAL2B,KAKhBC,eAajB,OAEQ,yBAAKT,UAAU,aACX,yBAAKA,UAAU,uBACX,yBACIA,UAAU,qBAGd,kBAAC,IAAD,CAAMU,SAbA,SAAUC,GAC5BA,EAAEC,iBACFJ,EAAS,CAAEpC,KAAM,eAAeX,QAAQ,CAACV,WAASC,gBAYlC,yBAAKgD,UAAU,cACX,2BAAOa,QAAQ,YAAf,YACA,kBAAC,IAAD,CACIzC,KAAK,OACL4B,UAAU,eACVnD,KAAK,WACLkD,MAAOhD,EACP+D,SA5BH,SAAUH,GAC/BN,EAAYM,EAAEI,OAAOhB,QA4BGiB,YAAa,CAAClB,MAItB,yBAAKE,UAAU,cACX,2BAAOa,QAAQ,YAAf,YACA,kBAAC,IAAD,CACIzC,KAAK,WACL4B,UAAU,eACVnD,KAAK,WACLkD,MAAO/C,EACP8D,SArCH,SAAUH,GAC/BL,EAAYK,EAAEI,OAAOhB,QAqCGiB,YAAa,CAAClB,MAItB,yBAAKE,UAAU,cACX,4BACIA,UAAU,4BACViB,SAAUV,GAETA,GACG,0BAAMP,UAAU,qCAEpB,yCAIP9C,GACG,yBAAK8C,UAAU,cACX,yBAAKA,UAAU,qBAAqBC,KAAK,SACpC/C,O,uDCvE/B4C,EAAW,SAACC,GAChB,IAAKA,EACH,OACE,yBAAKC,UAAU,qBAAqBC,KAAK,SAAzC,4BAOAL,EAAQ,SAACG,GACb,IAAKmB,kBAAQnB,GACX,OACE,yBAAKC,UAAU,qBAAqBC,KAAK,SAAzC,+BAOAkB,GAAY,SAACpB,GACjB,GAAIA,EAAMqB,OAAS,GAAKrB,EAAMqB,OAAS,GACrC,OACE,yBAAKpB,UAAU,qBAAqBC,KAAK,SAAzC,sDAOAoB,GAAY,SAACtB,GACjB,GAAIA,EAAMqB,OAAS,GAAKrB,EAAMqB,OAAS,GACrC,OACE,yBAAKpB,UAAU,qBAAqBC,KAAK,SAAzC,sDAOAqB,G,kDACJ,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IACDoB,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBAExB,EAAKnE,MAAQ,CACXN,SAAU,GACV6C,MAAO,GACP5C,SAAU,GACV4E,YAAY,GAXG,E,6DAeFjB,GACfkB,KAAKC,SAAS,CACZ/E,SAAU4D,EAAEI,OAAOhB,U,oCAITY,GACZkB,KAAKC,SAAS,CACZlC,MAAOe,EAAEI,OAAOhB,U,uCAIHY,GACfkB,KAAKC,SAAS,CACZ9E,SAAU2D,EAAEI,OAAOhB,U,qCAIRY,GAAI,IAAD,OAGhB,GAFAA,EAAEC,iBAEEiB,KAAKxE,MAAMuE,WACb,OAAO,kBAAC,IAAD,CAAUG,GAAG,UAItBF,KAAKC,SAAS,CACZF,YAAY,IAGdC,KAAKG,KAAKC,cAEmC,IAAzCJ,KAAKK,SAASC,QAAQC,QAAQhB,QAChCS,KAAK1B,MACFK,WAGAd,MAAK,WACJ,EAAKoC,SAAS,CACZF,YAAY,OAGfS,OAAM,WACL,EAAKP,SAAS,CACZF,YAAY,S,+BAMZ,IAAD,OACC1E,EAAY2E,KAAK1B,MAAjBjD,QACR,OAAI2E,KAAKxE,MAAMuE,WAEJ,kBAAC,IAAD,CAAUG,GAAG,UAGtB,yBAAK/B,UAAU,aACb,yBAAKA,UAAU,uBAEb,kBAAC,IAAD,CACEU,SAAUmB,KAAKN,eACfe,IAAK,SAACC,GACJ,EAAKP,KAAOO,KAGZV,KAAKxE,MAAMuE,YACX,6BACE,yBAAK5B,UAAU,cACb,2BAAOa,QAAQ,YAAf,YACA,kBAAC,IAAD,CACEzC,KAAK,OACL4B,UAAU,eACVnD,KAAK,WACLkD,MAAO8B,KAAKxE,MAAMN,SAClB+D,SAAUe,KAAKJ,iBACfT,YAAa,CAAClB,EAAUqB,OAI5B,yBAAKnB,UAAU,cACb,2BAAOa,QAAQ,SAAf,SACA,kBAAC,IAAD,CACEzC,KAAK,OACL4B,UAAU,eACVnD,KAAK,QACLkD,MAAO8B,KAAKxE,MAAMuC,MAClBkB,SAAUe,KAAKH,cACfV,YAAa,CAAClB,EAAUF,MAI5B,yBAAKI,UAAU,cACb,2BAAOa,QAAQ,YAAf,YACA,kBAAC,IAAD,CACEzC,KAAK,WACL4B,UAAU,eACVnD,KAAK,WACLkD,MAAO8B,KAAKxE,MAAML,SAClB8D,SAAUe,KAAKF,iBACfX,YAAa,CAAClB,EAAUuB,OAI5B,yBAAKrB,UAAU,cACb,4BAAQA,UAAU,6BAAlB,aAKL9C,GACC,yBAAK8C,UAAU,cACb,yBAAKA,UAAY6B,KAAKxE,MAAMuE,WAAa,sBAAwB,qBAAuB3B,KAAK,SAC1F/C,IAIP,kBAAC,IAAD,CACEsF,MAAO,CAAEC,QAAS,QAClBH,IAAK,SAACC,GACJ,EAAKL,SAAWK,Y,GAxITG,aAyJRC,oBAPf,SAAyBtF,GAEvB,MAAO,CACLH,QAFkBG,EAAMH,QAAlBA,WAMKyF,CAAyBrB,ICxMnBsB,G,kDACnB,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IAED9C,MAAQ,CACXwF,QAAS,IAJM,E,qDASjB,OAAQtF,aAAasC,QAAQ,QAY1B,yBAAKG,UAAU,aACb,4BAAQA,UAAU,aACpB,2BAAG,kBAAC,IAAD,CAAM+B,GAAI,cAAV,gBAAH,gCACA,2BAAG,kBAAC,IAAD,CAAMA,GAAI,WAAV,YAAH,+CACA,2BAAG,kBAAC,IAAD,CAAMA,GAAI,UAAV,WAAH,+BACA,2BAAG,kBAAC,IAAD,CAAMA,GAAI,UAAV,WAAH,6BACA,2BAAG,kBAAC,IAAD,CAAMA,GAAI,OAAV,eAAH,wBAhBD,yBAAK/B,UAAU,aACb,4BAAQA,UAAU,aAChB,wCACA,qGACA,sCAAW,kBAAC,IAAD,CAAM+B,GAAI,UAAV,WAAX,+B,GAhBwBW,a,kBCDrBI,GAAc,CACvB,CACEC,MAAO,SACPC,SAAU,GACVC,mBAAkB,EAClBC,OAAQ,qBACRC,qCAAoC,EACpCC,yBAAwB,GAE1B,CACEL,MAAO,KACPC,SAAU,GACVE,OAAQ,sBAEV,CACEH,MAAO,QACPC,SAAU,IACVE,OAAQ,sBAEV,CACEH,MAAO,OACPC,SAAU,IACVE,OAAQ,uBAKCG,GAAgB,CAC3BC,KAAM,EACNN,SAAU,GACVE,QAAQ,EACRK,cAAc,G,sEC7BZC,GAAe,CACnBX,QAAU,CACRY,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,0BAIb,SAASC,GAAe5D,GAAO,IAAD,EACT6D,IAAM5D,SAAS,IADN,mBACpC6D,EADoC,KACzBC,EADyB,OAEVF,IAAM5D,UAAS,GAFL,mBAEpC+D,EAFoC,KAEvBC,EAFuB,cAW7BC,IAX6B,2EAW5C,sBAAA/H,EAAA,sEACS6D,EAAMmE,WAAWL,GAD1B,OAEGG,GAAU,GAFb,4CAX4C,sBAsBzC,OAEI,oCACA,4BAAQpE,UAAU,SAASuE,QAtBjC,WACEH,GAAU,KAqB0CjE,EAAMqE,WACtD,kBAAC,KAAD,CACEC,OAAQN,EACRO,YArBR,aAsBQC,eAAgBN,EAChB7B,MAAOgB,GACPoB,aAAa,iBAId,0BAAMlE,SAAU2D,GACT,gDAEA,2BAAOjG,KAAK,OAAO2B,MAAOI,EAAM0E,UAAW/D,SArBzD,SAAwBgE,GACpBC,QAAQC,IAAI7E,GACd+D,EAAcY,EAAM/D,OAAOhB,WAqBf,2BAAOC,UAAU,SAAS5B,KAAK,SAAS2B,MAAM,cCpD9D,IAAMkF,GAAO1F,IAAM2F,OAAO,CACxBC,QAAS7F,EACT8F,QAAS,CACPC,cAAe,UAAY9H,aAAasC,QAAQ,WAmBrC,O,qHAbgByF,GAC3B,OAAO,IAAIC,YAAYjG,EAAS,mBAAqBgG,K,uCAEtCA,EAAIlH,GACnB,OAAO6G,GAAKO,IAAIlG,EAAS,iBAAmBgG,EAAK,mB,4CAGjD,OAAO,IAAIC,YAAYjG,EAAQ,kB,MCN/BmG,GAASC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAI9CC,GAAYC,GAAaC,6BAA6BP,IAC1DK,GAAUG,OAAS,SAAAnB,GAAK,OAAIC,QAAQC,IAAI,OAAQF,IAChDgB,GAAUI,QAAU,SAAApB,GAClBC,QAAQC,IAAI,oBACZc,GAAUK,QACVL,GAAYC,GAAaC,6BAA6BP,KAExD,IAAMW,GAAc,GACdC,GAAoB,GACpBC,GAAU,GACVC,GAAU,GAIVC,IAHMD,GAAQ,GAGD,IACbE,GAAa,GAIbC,IAHSF,GAAW,GACDA,GAAW,GAEd,IAIP,SAASG,GAAOxG,GAAQ,IAAD,EAENC,mBAAS,IAFH,mBAE7BwG,EAF6B,KAEpBC,EAFoB,OAGNzG,mBAAS,MAHH,mBAG7B0G,EAH6B,KAGpBC,EAHoB,OAIM3G,mBAAS,MAJf,mBAId4G,GAJc,uDAgFpC,WAA2BvK,GAA3B,SAAAH,EAAA,sDACEiK,GAAQU,SAAQ,SAAUlH,EAAOmH,GAC/B,GAAIzK,EAAK0K,OAASb,GAAQY,GAAM,CAC9BJ,EAAQM,eAAerH,EAAMA,OAC7B,IAAIsH,EAAIC,SAASC,uBAAuB,+CAA+CC,KAAK,QACnFC,GAALJ,IACFA,EAAEK,UAAYjL,EAAK0K,WAN3B,4CAhFoC,kEA2FpC,WAAiC1K,GAAjC,SAAAH,EAAA,sDACEiK,GAAQU,SAAQ,SAAUlH,EAAOmH,GAC/B,GAAIzK,EAAK0K,OAASb,GAAQY,GAAM,CAC9BJ,EAAQM,eAAerH,EAAMA,OAC7B,IAAIsH,EAAIC,SAASC,uBAAuB,gDAAgDC,KAAK,QACpFC,GAALJ,IACFA,EAAEK,UAAYjL,EAAK0K,WAN3B,4CA3FoC,kEAyGpC,WAA8B1K,GAA9B,SAAAH,EAAA,sDACEwK,EAAQa,cACRlB,GAAWQ,SAAQ,SAAUlH,EAAOmH,GAC9BzK,EAAK0K,OAASX,GAAWU,IAC3BJ,EAAQc,+BAA8B,SAAUC,EAASC,GAEb,IAApCC,OAAOC,KAAKjI,EAAMA,OAAOqB,QAC3BrB,EAAMA,MAAMkI,KAAI,SAAAC,GACVA,EAAI5C,IAAMuC,EAAQvC,IAEpBuC,EAAQM,aAAY,YAVpC,4CAzGoC,kEA6HpC,4BAAA7L,EAAA,sDACEwK,EAAQM,eAAe,SAEdK,IADLJ,EAAIC,SAASC,uBAAuB,+CAA+CC,KAAK,MAE1FH,EAAEK,UAAY,iBAJlB,4CA7HoC,kEAqIpC,4BAAApL,EAAA,sDACEwK,EAAQa,mBAECF,IADLJ,EAAIC,SAASC,uBAAuB,gDAAgDC,KAAK,MAE3FH,EAAEK,UAAY,mBAJlB,4CArIoC,sBAWpC5B,GAAUsC,UAAY,SAAAtD,GACpB,IAAMuD,EAASvD,EAAMrI,KACrBoK,EAAWyB,KAAKC,MAAMF,KA+JxB,OACE,yBAAK7F,MAAO,CAAEgG,MAAO,SAAUC,OAAQ,UACrC,4BAAQzI,UAAU,SAASuE,QAAS,WA7JvCwB,GAAa2C,iBAAiBjD,GAAO,YA6JlC,cACA,4BAAQzF,UAAU,SAASuE,QAAS,kBA3JxC,WACE,IAAIoE,EAAc7B,EAAQ8B,kBACtBC,EAAajC,EAAQ1D,QAAO,SAAAgF,GAC9B,OAAQS,EAAYG,SAASZ,MAE/BrB,EAAWgC,GAsJiCE,KAA1C,eAOA,kBAAChF,GAAD,CAAiBO,WA1HrB,SAAuB0E,GACrB,GAAuB,GAAnBA,EAAS5H,QAAgBkF,GAAQwC,SAASE,GAe5CC,MAAM,oDAfiD,CACzD,IAAIC,EAAOZ,KAAKC,MAAMD,KAAKa,UAAUrC,EAAQ8B,oBACzB,IAAhBM,EAAK9H,QACPiF,GAAkB+C,KAAKF,GACvB1C,GAAW4C,KAAKJ,GAChBvC,GAAW2C,KAAK,CACd9D,GAAI0D,EACJjJ,MAAOmJ,KAITD,MAAM,sBA8GsCzE,UAAW,mBACvD,4BAAQxE,UAAU,SAASuE,QAAS,kBAvLJ,0CAuLU8E,KAA1C,mBAIA,4BAAQrJ,UAAU,SAASuE,QAAS,kBA3LJ,0CA2LU+E,KAA1C,sBAGA,kBAACvF,GAAD,CAAiBO,WAtJrB,SAAqB0E,GACnB,GAAuB,GAAnBA,EAAS5H,QAAgBkF,GAAQwC,SAASE,GAe5CC,MAAM,yFAfiD,CACvD,IAAIM,EAAajB,KAAKC,MAAMD,KAAKa,UAAUrC,EAAQ0C,mBACZ,IAAnCzB,OAAOC,KAAKuB,GAAYnI,QAC1BgF,GAAYgD,KAAKG,GACjBjD,GAAQ8C,KAAKJ,GACbzC,GAAQ6C,KAAK,CACX9D,GAAI0D,EACJjJ,MAAOwJ,KAITN,MAAM,yBA0IkCzE,UAAW,gBACrD,kBAAC,KAAD,CAAUxE,UAAU,WAClByJ,iBAAiB,eACjBC,qBAAqB,aACrB5I,SAlM8B,4CAmM9BwF,QAASA,GAETqD,YAAY,kBAEd,kBAAC,KAAD,CAAU3J,UAAU,WAClByJ,iBAAiB,eACjBC,qBAAqB,cACrB5I,SA1M8B,4CA2M9BwF,QAASE,GAETmD,YAAY,qBAGd,kBAAC,KAAD,CAAU3J,UAAU,WAClByJ,iBAAiB,eACjBC,qBAAqB,cACrB5I,SAnN8B,4CAoN9BwF,QAASI,GACTiD,YAAY,mBAId,yBAAK3J,UAAU,kBAAf,eAEE,2BACE5B,KAAK,OACLwL,QAAS,WAzEf9C,EAAQ+C,eAAevC,SAASwC,eAAe,eAAe/J,QA0ExDuF,GAAG,cACHqE,YAAY,0BAGhB,yBACErE,GAAG,SACH9C,MAAO,CACLiG,OAAQ,OACRD,MAAO,QAETxI,UAAU,mBAEV,kBAAC,eAAD,CACE+J,aApOR,SAAsBtN,GACpB,OAAOA,EAAK6I,IAoONxC,WAAYA,GACZO,cAAeA,GACf2G,aAAc,WACdC,YAjGR,SAAqBC,GACnBnD,EAAWmD,EAAOC,KAClBnD,EAAiBkD,EAAOE,YAgGlBC,eAAe,EACfzD,QAASA,M,cC3PH0D,OA5BhB,SAAsBnK,GAEjB,OACI,yBAAKH,UAAU,kBACf,8CACE,2BAAOA,UAAU,yBAChB,+BACC,wBAAIA,UAAU,eACX,6CACA,gDAGH,+BACEG,EAAMoK,OAAOtC,KAAI,SAAAuC,GAAK,OACrB,wBAAIxK,UAAU,UACZ,4BAAKwK,EAAMC,WACX,4BAAK/E,KAAKgF,MAAMF,EAAMG,qB,mCCsCxBC,I,yDAhDd,WAAYzK,GACX,IAAD,8BACC,cAAMA,IACC9C,MAAQ,CACVwN,aAAa,EACbC,MAAO,MAGX,EAAKC,UAAY,EAAKA,UAAUvJ,KAAf,gBAPnB,E,iEAUIK,KAAKxE,MAAMwN,aAAc,EACzBhJ,KAAKkJ,c,kCAGF,IAGMC,EAASC,eAAYC,MAAM,CAAC,EADnB,MAC6BC,OAAOtJ,KAAK1B,MAAMoK,OAAOtC,KAAI,SAACmD,GAAD,OAAMA,EAAEC,cAAYC,QAAQ,IAC/FC,EAASC,eAAcN,MAAM,CAHnB,IAG2B,IAAIC,OAAO,CAAC,EAAE,MAEnDL,EADMW,aAAO5J,KAAK6J,MACND,OAAO,KAAKE,KAAK,YAAY,oBAC/Cb,EAAMW,OAAO,aAAazN,KAAK4N,aAASL,IACxCT,EAAMW,OAAO,eAAeE,KAAK,YAAY,qBAAqB3N,KAAK6N,aAAWb,IAClFF,EAAMgB,UAAU,QAAQrP,KAAKoF,KAAK1B,MAAMoK,QAAQwB,QAAQC,OAAO,QAC/DlB,EAAMgB,UAAU,QAAQrP,KAAKoF,KAAK1B,MAAMoK,QAAQ0B,OAAOC,SACvDpB,EAAMgB,UAAU,QAAQrP,KAAKoF,KAAK1B,MAAMoK,QACnBoB,KAAK,KAAK,SAACP,GAAD,OAAOJ,EAAOI,EAAEC,cAC1BM,KAAK,KAAK,SAACP,GAAD,OAAOG,EAAOH,EAAET,eAC1BgB,KAAK,UAAU,SAACP,GAAD,OAAO,IAAMG,EAAOH,EAAET,eACrCgB,KAAK,QAASX,EAAOmB,e,+BAKxC,IAAD,OACL,OAAS,yBAAKnM,UAAU,gBAAf,IAA+B,yBAAKsC,IAAK,SAAAoJ,GAAI,OAAI,EAAKA,KAAMA,IAClE,2BACI,uBAAGpG,GAAG,aAEH,uBAAGA,GAAG,sB,GA1CI5C,c,0DCAnB0J,I,OAAYC,aAAW,CAC3BC,KAAM,CACJ9D,MAAO,QAII,SAAS+D,KACNH,KAAhB,IADyC,EAEfpI,IAAM5D,SAAS,IAFA,mBAElCL,EAFkC,KAE3ByM,EAF2B,KAYzC,OACE,yBAAKxM,UAAU,aACb,kBAACyM,GAAA,EAAD,CAAYnH,GAAG,oBAAoBoH,cAAY,GAA/C,2BAKA,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMnF,MAAI,EAACsF,IAAE,GACX,kBAACC,GAAA,EAAD,CAAQhN,MAAOA,EAAOe,SAjBT,SAACgE,EAAOkI,GAC3BR,EAASQ,IAgB2CC,kBAAgB,wBAGlE,yBAAKjN,UAAU,eACf,4BAAWuE,QAjBA,SAACO,GACdC,QAAQC,IAAI,YAgBV,iB,ICgDSkI,G,kDA1EZ,WAAY/M,GAAQ,IAAD,uBAChB,cAAMA,IACD9C,MAAQ,CACVyN,MAAO,MAEV,EAAKC,UAAY,EAAKA,UAAUvJ,KAAf,gBAGA2L,KAAKC,MARN,S,0KAahBvL,KAAKwL,UAAY,EACjBxL,KAAKyL,SAAW,EAChBzL,KAAK0L,YAAaJ,KAAKC,M,2PAMvBvL,KAAKkJ,Y,wIAKL,IAAIyC,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAiD,GACjDhF,EAAQ,IAAMgF,EAAcA,EAC5B/E,EAAS,IAAM+E,EAFwB,GAIvCC,EAAanG,SAASwC,eAAe,WAAWtB,MAAMkF,QAAQ3N,MAAQyN,EAAcA,EACpFxC,EAAS2C,eAAYzC,MAAM,CAAC,EAAG1C,IAAQ2C,OAAO,CAACtJ,KAAK0L,YAAa1L,KAAK0L,YAAc,MAAYK,OAC9FrC,EAASC,eAAcN,MAAM,CAACzC,EAAQ,IAAI0C,OAAO,CAAC,EAAG,MAErDL,EADMW,aAAO5J,KAAK6J,MACND,OAAO,KAAKE,KAAK,YAAa,aAAe6B,EAAc,IAAMA,EAAa,KAG1FK,GAFQ/C,EAAMW,OAAO,aAAazN,KAAK4N,aAASL,IACxCT,EAAMW,OAAO,eAAeE,KAAK,YAAa,eAAiBlD,EAAS,KAAMzK,KAAK6N,aAAWb,IAC9F8C,OAAUD,MAAMC,OAC1BC,EAAStF,EAAS,IAChBuF,EAAS,CAAC,CAACnM,KAAKyL,SAAa7E,EAAU5G,KAAKwL,UAAaU,GAC/C,CAAElM,KAAKyL,SAAW9E,EAAM,IAAQC,EAAU5G,KAAK1B,MAAMoK,OAAOtC,KAAI,SAAAmD,GAAC,OAAIA,EAAET,cAAY9I,KAAK1B,MAAM8N,UAAaF,IAC3HjD,EACMkB,OAAO,QACPL,KAAK,IAAKkC,EAAMG,IAChBrC,KAAK,SAAU,aACfA,KAAK,OAAQ,QAChB9J,KAAKyL,UAAYzL,KAAKyL,SAASG,EAAW,KAE1C5L,KAAKyL,SAAS,EACdxC,EAAMgB,UAAU,QAAQI,SACxBrK,KAAK0L,YAAYJ,KAAKC,OAEzBvL,KAAKwL,UAAYxL,KAAK1B,MAAMoK,OAAOtC,KAAI,SAAAmD,GAAC,OAAIA,EAAET,cAAY9I,KAAK1B,MAAM8N,UACrEpM,KAAKyL,SAAWzL,KAAKyL,SAAY9E,EAAM,M,+BAGhC,IAAD,OACN,OACG,yBAAKxI,UAAU,oBACZ,6BAAK,kBAAC,GAAD,OACL,6BACG,yBAAKsC,IAAK,SAAAoJ,GAAI,OAAI,EAAKA,KAAOA,GAAMpG,GAAG,WAEpC,2BACG,uBAAGA,GAAG,aAEN,uBAAGA,GAAG,uB,GApEE5C,aCDvBwL,GAASnI,GAAaoI,sBA6CbC,G,kDAvCb,WAAYjO,GAAQ,IAAD,8BACjB,cAAMA,IACD9C,MAAQ,CACXkN,OAAQ,GACR8D,WAAW,GAJI,E,qLAUjBxM,KAAKC,SAAS,CAACuM,WAAW,IAC1BH,GAAOjI,OAAS,SAAAnB,GAAK,OAAIC,QAAQC,IAAI,OAAQF,IAC7CoJ,GAAO9F,UAAY,SAAAtD,GACjB,IAAMuD,EAASC,KAAKC,MAAMzD,EAAMrI,MAChC,EAAKqF,SAAS,CAACyI,OAAQlC,EAAOiG,aAEhCJ,GAAOhI,QAAU,SAAApB,GAChBC,QAAQC,IAAI,oBACZkJ,GAAO/H,QACP,EAAKrE,SAAS,CAACyM,YAAa,Q,qIAMrB,IAAD,EACqB1M,KAAKxE,MAA1BkN,EADA,EACAA,OADA,EACQ8D,UACd,OACG,yBAAKrO,UAAU,uBACZ,kBAAC,GAAD,CAAcuK,OAAQA,IACxB,kBAAC,GAAD,CAAgBA,OAAQA,EAAQ0D,SAAU,IAC1C,kBAAC,GAAD,CAAgB1D,OAAQA,EAAO0D,SAAU,IACzC,kBAAC,GAAD,CAAY1D,OAAQA,S,GAnCD7H,a,SCTf8L,GAAUC,eCCjBxJ,GAAO1F,IAAM2F,OAAO,CACxBC,QAAS7F,EACT8F,QAAS,CACPC,cAAe,UAAY9H,aAAasC,QAAQ,WAwCrC,O,+FAnCN6O,EAAMC,GACX,IAAIC,EAAW,IAAIC,SAInB,OAFAD,EAAS5C,OAAO,UAAW0C,GAEpBzJ,GAAKzF,KAAK,UAAWoP,EAAU,CACpCxJ,QAAS,CACP,eAAgB,uBAElBuJ,uB,iCAKJ,OAAO1J,GAAKO,IAAI,Y,wCAKd,OAAOP,GAAKO,IAAI,sB,kCAENsJ,GACV,OAAO7J,GAAKO,IAAI,yBAAyBsJ,K,iCAEhCA,GACT,OAAO7J,GAAKO,IAAI,wBAAwBsJ,K,sCAG1BA,GAEd,MAAO,oDAAoDA,M,MCpC1CC,I,yDACnB,WAAY5O,GAAQ,IAAD,8BACjB,cAAMA,IACD6O,WAAa,EAAKA,WAAWxN,KAAhB,gBAClB,EAAKyN,OAAS,EAAKA,OAAOzN,KAAZ,gBACd,EAAK0N,UAAY,EAAKA,UAAU1N,KAAf,gBACjB,EAAK2N,QAAU,EAAKA,QAAQ3N,KAAb,gBAEf,EAAKnE,MAAQ,CACX+R,mBAAe3H,EACf4H,iBAAa5H,EACb6H,SAAU,EACVpS,QAAS,GACTqS,UAAW,GACXC,YAAa,IAbE,E,gEAiBE,IAAD,OAElBC,GAAcC,WAAWhQ,MAAK,SAACC,GAC7B,EAAKmC,SAAS,CACZyN,UAAW5P,EAASlD,UAIxBgT,GAAcE,kBAAkBjQ,MAAK,SAACC,GACpC,EAAKmC,SAAS,CACZ0N,YAAa7P,EAASlD,Y,iCAKjBqI,GACTjD,KAAKC,SAAS,CACZsN,cAAetK,EAAM/D,OAAO6O,U,+BAItB,IAAD,OACHP,EAAcxN,KAAKxE,MAAM+R,cAAc,GAC3CvN,KAAKC,SAAS,CACZwN,SAAU,EACVD,YAAaA,IAGfI,GAAcR,OAAOI,GAAa,SAACvK,GACjC,EAAKhD,SAAS,CACZwN,SAAU5J,KAAKgF,MAAO,IAAM5F,EAAM+K,OAAU/K,EAAMgL,YAGnDpQ,MAAK,SAACC,GAIL,OAHA,EAAKmC,SAAS,CACZ5E,QAASyC,EAASlD,KAAKS,UAElBuS,GAAcC,cAEtBhQ,MAAK,SAACkQ,GACL,EAAK9N,SAAS,CACZyN,UAAWK,EAAMnT,UAGpB4F,OAAM,WACL,EAAKP,SAAS,CACZwN,SAAU,EACVpS,QAAS,6BACTmS,iBAAa5H,OAInB5F,KAAKC,SAAS,CACZsN,mBAAe3H,M,gCAIX3C,GAER,IAAIiL,EAAM,oDAAoDjL,EAAM/D,OAAOiP,KAC3EC,OAAOC,KAAKH,K,uEAEAtT,G,iFAEWgT,GAAcU,YAAY1T,G,kBACnCA,K,gCACHoF,KAAKC,SAAS,CAAE0N,YAAY,GAAD,mBAAM3N,KAAKxE,MAAMmS,aAAjB,CAA8B,CAACjT,IAAI,GAAIM,KAAKJ,O,6BAG9EwM,MAAM,2C,6KAICxM,G,4EAEMgT,GAAcW,WAAW3T,GAC/BiD,MAAM,SAAAiB,GAAQA,EAAElE,MACvBgT,GAAcC,WAAWhQ,MAAK,SAACC,GAC7B,EAAKmC,SAAS,CACZyN,UAAW5P,EAASlD,a,iIASlB,IAAD,SAQHoF,KAAKxE,MANP+R,EAFK,EAELA,cACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,SACApS,EALK,EAKLA,QACAqS,EANK,EAMLA,UACAC,EAPK,EAOLA,YAGA,OADFzK,QAAQsL,MAAMb,GAEZ,6BACGH,GAAyB,KAAVC,GACd,yBAAKtP,UAAU,YACb,yBACEA,UAAU,sDACVC,KAAK,cACLqQ,gBAAehB,EACfiB,gBAAc,IACdC,gBAAc,MACdhO,MAAO,CAAEgG,MAAO8G,EAAW,MAE1BA,EARH,MAYJ,yBAAKtP,UAAU,cAEb,2BAAO5B,KAAK,OAAO0C,SAAUe,KAAKmN,aAClC,4BAAQhP,UAAU,UAAYiB,UAAWmO,EAAe7K,QAAS1C,KAAKoN,QAAtE,WAMF,yBAAKjP,UAAU,oBAAoBC,KAAK,SACrC/C,GAGH,yBAAK8C,UAAU,eACb,yBAAKA,UAAU,eAAf,iBACA,wBAAIA,UAAU,+BACXuP,GACCA,EAAUtH,KAAI,SAACyG,EAAM5G,GAAP,OACZ,yBAAK9H,UAAU,cACf,wBAAIA,UAAU,kBAAkBkH,IAAKY,GAEnC0H,EAAYvH,KAAI,SAAAtH,GAAC,OAAEA,EAAE9D,MAAO6R,EAAK7R,QAAMiM,UAAS,GAClC,yBAAK9I,UAAU,WAAf,IAA0B,yBAAKA,UAAU,eACxC,yBAAKA,UAAU,WAAf,IAA0B,yBAAKA,UAAU,cACxD,uBAAGA,UAAU,WAAWuE,QAAS,EAAK2K,WAAYR,EAAK7R,MACvD,uBAAGmD,UAAU,UAAWuE,QAAS,kBAAI,EAAK4K,QAAQT,EAAK7R,QAAvD,YACA,uBAAGmD,UAAU,UAAWuE,QAAS,kBAAI,EAAKkM,OAAO/B,EAAK7R,QAAtD,uB,GA9JuB6F,c,cCc1B,SAASgO,GAAQvQ,GAC9B,OACE,yBAAKH,UAAU,WACb,yBAAKA,UAAU,SAASG,EAAMwQ,OAC9B,yBAAK3Q,UAAU,QAAQG,EAAMyQ,W,cCHpB,SAASC,GAAa1Q,GACnC,OACE,kBAACuQ,GAAD,CAASC,MAAM,uBACb,kBAAC,KAAD,CACEG,YAAY,OACZC,eAAgB,CACdC,WAAY,EACZC,gBAAiB,EACjBC,sBAAuB,CACrB,CACE9S,KAAM,OACN+S,WAAY,CACVC,mBAAoB,CAAC,WAAY,kBACjCC,oBAAqB,CAAC,aAAc,SAEtCC,0BAA2B,CACzBlT,KAAM,kBACN+S,WAAY,CACVI,QAAS,UACTC,kBAAmB,+BAK3BC,aAAc,CACZC,WAAY,uBACZC,aAAc,iBAEhBC,gBAAiB,CACfC,iBAAkB,QAClBC,gBAAiB,QACjBC,WAAY5R,EAAM6R,OAClBC,aAAc,MACdC,YAAa,OAGjBC,kBAAmB,SAAApB,GACjBhM,QAAQC,IAAI,UAAW+L,IAEzBqB,8BAA+BjS,EAAMiS,8BACrCC,YAAalS,EAAMkS,YACnBC,WAAYnS,EAAMmS,cCxC1B,IAoEeC,GApEiB,WAAO,IAAD,EACRnS,mBAAS,UADD,mBAC7B4R,EAD6B,KACrBQ,EADqB,OAEsCpS,oBAAS,GAF/C,mBAE7BgS,EAF6B,KAEEK,EAFF,OAGErS,mBAAS,WAHX,mBAG7BiS,EAH6B,KAGhBK,EAHgB,OAIAtS,mBAAS,OAJT,mBAI7BkS,EAJ6B,KAIjBK,EAJiB,KAsBpC,IAAMxS,EAAQ,CACZ6R,SACAI,gCACAC,YAAaA,EACbC,WAAYA,GAGd,OACE,yBAAKtS,UAAU,OACb,yBAAKA,UAAU,UACb,+BACE,iDACA,2BAAO5B,KAAK,OAAOwU,aAAcZ,EAAQa,OA5BjD,SAA4B/N,GAC1B0N,EAAU1N,EAAM/D,OAAOhB,WA6BnB,+BACE,0DACA,4BAAQe,SA5BhB,SAA6CgE,GAC3C2N,EAAwD,QAAvB3N,EAAM/D,OAAOhB,QA2BeA,MAAOqS,EAAgC,MAAQ,MACpG,4BAAQrS,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,SAGJ,+BACE,+CACA,4BAAQe,SA/BhB,SAA2BgE,GACzB4N,EAAe5N,EAAM/D,OAAOhB,QA8BeA,MAAOsS,GAC1C,4BAAQtS,MAAM,WAAd,WACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,WAGJ,+BACE,8CACA,4BAAQe,SAnChB,SAA0BgE,GACxB6N,EAAc7N,EAAM/D,OAAOhB,QAkCeA,MAAOuS,GACzC,4BAAQvS,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,YAIN,kBAAC8Q,GAAiB1Q,KChET,SAAS2S,GAAI3S,GAEZ4S,aAAY,SAAA1V,GAAK,OAAIA,EAAMJ,SAAzC,IACM+V,EAAcD,aAAY,SAAA1V,GAAK,OAAIA,EAAMN,YAI7C,OACE,kBAAC,IAAD,CAAQyR,QAASA,IACf,6BACE,yBAAKxO,UAAU,4CACb,kBAAC,IAAD,CAAM+B,GAAI,IAAK/B,UAAU,gBAAzB,YAGA,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAM+B,GAAI,QAAS/B,UAAU,YAA7B,UAOHgT,EACC,yBAAKhT,UAAU,sBACb,wBAAIA,UAAU,YACZ,uBAAGiT,KAAK,QAAQjT,UAAU,WAAWuE,QAAS1C,KAAKqR,QAAnD,WAIF,wBAAIlT,UAAU,YACZ,kBAAC,IAAD,CAAM+B,GAAI,UAAW/B,UAAU,YAA/B,WAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAM+B,GAAI,aAAc/B,UAAU,YAAlC,eAMJ,yBAAKA,UAAU,sBACb,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAM+B,GAAI,SAAU/B,UAAU,YAA9B,UAIF,yBAAKA,UAAU,sBAEf,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAM+B,GAAI,YAAa/B,UAAU,YAAjC,eAYR,yBAAKA,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmT,OAAK,EAACC,KAAM,CAAC,IAAK,SAAUC,UAAWzQ,KAC9C,kBAAC,IAAD,CAAOuQ,OAAK,EAACC,KAAK,SAASC,UAAWnT,IACtC,kBAAC,IAAD,CAAOiT,OAAK,EAACC,KAAK,YAAYC,UAAW/R,KACxC0R,EAAa,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,UAAYC,UAAWtE,KACtD,kBAAC,IAAD,CAAOoE,OAAK,EAACC,KAAK,UAAYC,UAAWnT,IACzC8S,EAAa,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,aAAeC,UAAW1M,KACzD,kBAAC,IAAD,CAAOwM,OAAK,EAACC,KAAK,aAAeC,UAAWnT,IAE7C,kBAAC,IAAD,CAAOiT,OAAK,EAACC,KAAK,MAAMC,UAAajF,KACrC,kBAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,WAAWC,UAAad,SCjFpCe,QACW,cAA7BrD,OAAOsD,SAASC,UAEe,UAA7BvD,OAAOsD,SAASC,UAEhBvD,OAAOsD,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,CAAU7U,MAAOA,GACf,kBAAC,GAAD,OAEFwI,SAASwC,eAAe,SDuHpB,kBAAmB8J,WACrBA,UAAUC,cAAcC,MACrBpU,MAAK,SAAAqU,GACJA,EAAaC,gBAEd3R,OAAM,SAAA4R,GACLlP,QAAQkP,MAAMA,EAAM/W,c","file":"static/js/main.1e1cd10e.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nclass LoginApi{\r\n\r\n    callAPI = async ({url, method, data}) => {\r\n        return Axios({\r\n            url,\r\n            method,\r\n            data\r\n        });\r\n    };\r\n}\r\n\r\nexport default new LoginApi();","import { createSlice } from '@reduxjs/toolkit'\r\nimport LoginApi from \"../api/login.interface\";\r\nimport {useDispatch} from \"react-redux\";\r\nlet initialState =  {\r\n   username: \"\",\r\n   password:\"\",\r\n   token:\"\",\r\n   message:\"\"\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setToken(state, action) {\r\n           localStorage.setItem(\"user\",action.payload.token) ;\r\n           return {\r\n               username: action.payload.username,\r\n               token: action.payload.token\r\n           }\r\n        },\r\n        logout(state, action) {\r\n            localStorage.removeItem(\"user\");\r\n        },\r\n        registerSuccess(state,action) {\r\n            state.message =\"Succesfull\";\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setToken, logout} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;","import {call, takeEvery, put} from \"redux-saga/effects\";\r\nimport {setToken} from \"../slices/auth.slice\";\r\nimport LoginApi from '../api/login.interface';\r\n\r\nexport function* secureLogin(payload) {\r\n    try {\r\n        const {username, password} = payload.payload\r\n        let result = yield call(() =>\r\n            LoginApi.callAPI({\r\n                url: \"https://localhost:8444/login\",\r\n                method: \"POST\",\r\n                data: {username: username, password: password}\r\n            })\r\n        );\r\n        yield put(setToken({username:username,token:result.data.token}));\r\n    } catch (e) {\r\n        yield put({type: \"TODO_FETCH_FAILED\"});\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery(\"SECURE_LOGIN\", secureLogin);\r\n}\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\n\r\nimport authReducer from './slices/auth.slice'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n})\r\n\r\n\r\n\r\nexport default rootReducer\r\n","\r\nimport { configureStore, getDefaultMiddleware  } from '@reduxjs/toolkit'\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport saga from \"./sagas/sagas\";\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './rootReducer'\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst middlewares = [sagaMiddleware, logger];\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [...getDefaultMiddleware({thunk: false}), ...middlewares],\r\n});\r\nsagaMiddleware.run(saga);\r\nif (process.env.NODE_ENV === 'development' && module.hot) {\r\n    module.hot.accept('./rootReducer', () => {\r\n        const newRootReducer = require('./rootReducer').default\r\n        store.replaceReducer(newRootReducer)\r\n    })\r\n}\r\n\r\nexport default store\r\n","export const AUTH_API_URL = \"https://localhost:8444/\";\r\nexport const API_URL = \"https://localhost:8443\";","import axios from \"axios\";\r\n\r\nimport {AUTH_API_URL} from '../settings';\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(AUTH_API_URL + \"login\", { username, password })\r\n      .then((response) => {\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", response.data.token);\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(AUTH_API_URL + \"register\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n  isLoggedIn() {\r\n   if( localStorage.getItem(\"user\")) return true\r\n   else return false;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState} from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport {login} from '../slices/auth.slice'\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default function Login(props) {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch()\r\n    const onChangeUsername = function (e) {\r\n        setUsername(e.target.value);\r\n    }\r\n    const onChangePassword = function (e) {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const handleLogin =   function (e) {\r\n        e.preventDefault();\r\n        dispatch({ type: \"SECURE_LOGIN\",payload:{username,password} });\r\n\r\n      }\r\n    return (\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"card card-container\">\r\n                    <img\r\n                        className=\"profile-img-card\"\r\n                    />\r\n\r\n                    <Form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                value={username}\r\n                                onChange={onChangeUsername}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <Input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={onChangePassword}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <button\r\n                                className=\"btn btn-primary btn-block\"\r\n                                disabled={loading}\r\n                            >\r\n                                {loading && (\r\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                                )}\r\n                                <span>Login</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        {message && (\r\n                            <div className=\"form-group\">\r\n                                <div className=\"alert alert-danger\" role=\"alert\">\r\n                                    {message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n    \r\n    if (this.state.successful) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n       //   register(this.state.username, this.state.email, this.state.password)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n    if (this.state.successful)\r\n    {\r\n      return ( <Redirect to=\"/home\"/>)\r\n    }\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n        \r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","import React, { Component } from \"react\";\r\n\r\nimport {  Link } from \"react-router-dom\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return !localStorage.getItem(\"user\")?\r\n     (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>Sid Blog</h3>\r\n          <p>Following are some scribbles from the coding learning and experiences </p>\r\n          <b>Please  <Link to={\"/login\"}> Login </Link> to see the main page</b>\r\n         \r\n        </header>\r\n      </div>\r\n    )\r\n    :\r\n    (  <div className=\"container\">\r\n         <header className=\"jumbotron\">\r\n       <p><Link to={\"/eventGrid\"}> Event Grid </Link>with Adhoc reactivity design</p>\r\n       <p><Link to={\"/upload\"}> Upload </Link> Download functionality on with filesystem </p>\r\n       <p><Link to={\"/kafka\"}> Kafka </Link> high transaction simulator</p>\r\n       <p><Link to={\"/spark\"}> Spark </Link> for file based analytics</p>\r\n       <p><Link to={\"/d3\"}> D3 Charts </Link> with high repaint</p>\r\n\r\n\r\n      </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\nexport const columnDefs =  [\r\n    {\r\n      field: \"userId\",\r\n      minWidth: 20,\r\n      checkboxSelection:true,\r\n      filter: 'agTextColumnFilter',\r\n      headerCheckboxSelectionFilteredOnly:true,\r\n      headerCheckboxSelection:true\r\n    },\r\n    {\r\n      field: \"id\",\r\n      minWidth: 20,\r\n      filter: 'agTextColumnFilter'\r\n    },\r\n    {\r\n      field: \"title\",\r\n      minWidth: 350,\r\n      filter: 'agTextColumnFilter'\r\n    },\r\n    {\r\n      field: \"body\",\r\n      minWidth: 350,\r\n      filter: 'agTextColumnFilter',\r\n\r\n    },\r\n\r\n  ];\r\n export const  defaultColDef = {\r\n    flex: 1,\r\n    minWidth: 50,\r\n    filter: true,\r\n    closeOnApply: true,\r\n\r\n  }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport \"./events.css\";\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nexport default function ModalComponent(props){\r\n  const [textValue, setTextValue] = React.useState(\"\");\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n \r\n  function afterOpenModal() {\r\n\r\n  }\r\n \r\n async function closeModal(){\r\n    await props.submitfunc(textValue);\r\n    setIsOpen(false);\r\n    \r\n  }\r\n\r\n  function   handleChange(event) {\r\n      console.log(props);\r\n    setTextValue( event.target.value);\r\n  }\r\n \r\n    return (\r\n       \r\n        <>\r\n        <button className=\"button\" onClick={openModal}>{props.titleName}</button>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n \r\n       \r\n         <form onSubmit={closeModal}>\r\n                <label>\r\n                Provide a Name\r\n                <input type=\"text\" value={props.textvalue} onChange={handleChange}  />\r\n                </label>\r\n                <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n           \r\n      \r\n        </Modal>\r\n     </>\r\n    );\r\n}","\r\nimport axios from \"axios\";\r\nimport {API_URL} from  '../settings';\r\nconst http = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    Authorization: \"Bearer \" + localStorage.getItem(\"user\")\r\n  }\r\n});\r\n\r\nclass EventService {\r\n\r\n  getEventGridDataSourceBySubs(id) {\r\n    return new EventSource(API_URL+ \"/getHttp?subsId=\" + id);\r\n  }\r\n  getEventDataById(id, type) {\r\n    return http.get(API_URL+ \"/event?subsId=\" + id + \"&event=sample\");\r\n  }\r\n  getPricesDataSource() {\r\n    return new EventSource(API_URL+\"/getPrices\");\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new EventService();\r\n","import React, { useState } from 'react';\r\nimport { render } from \"react-dom\";\r\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\r\nimport { columnDefs, defaultColDef } from '../helpers/columnDefHelper';\r\nimport \"ag-grid-community\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport \"./events.css\";\r\nimport Dropdown from 'react-dropdown';\r\nimport ModalComponent from './modal.component';\r\nimport EventService from '../services/event.service';\r\n\r\nlet subsId = Math.random().toString(36).substr(2, 9);\r\n\r\n\r\n\r\nlet sseEvents = EventService.getEventGridDataSourceBySubs(subsId);\r\nsseEvents.onopen = event => console.log('open', event);\r\nsseEvents.onerror = event => {\r\n  console.log(\"Server side shut\");\r\n  sseEvents.close();\r\n  sseEvents = EventService.getEventGridDataSourceBySubs(subsId)\r\n}\r\nconst savedFilter = [];\r\nconst savedSelectedRows = [];\r\nconst options = [];\r\nconst choices = [];\r\nlet value = choices[0];\r\n\r\n\r\nconst optionsSel = [];\r\nconst choicesSel = [];\r\nlet valueSel = optionsSel[0];\r\nconst defaultOptionSel = optionsSel[0];\r\n\r\nconst optionsPreset = [];\r\nconst choicesPreset = [{ id: 0, value: \"NoFilter\" }];\r\n\r\n\r\nexport default function Events(props) {\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [gridColumnApi, setGridColumnApi] = useState(null);\r\n\r\n\r\n  function getRowNodeId(data) {\r\n    return data.id;\r\n  };\r\n\r\n  sseEvents.onmessage = event => {\r\n    const update = event.data;\r\n    setRowData(JSON.parse(update));\r\n  };\r\n\r\n  function addRowData(newData) {\r\n   EventService.getEventDataById(subsId,\"sample\");\r\n  };\r\n\r\n  function removeRowData() {\r\n    let selectedRow = gridApi.getSelectedRows();\r\n    let newRowData = rowData.filter(row => {\r\n      return !selectedRow.includes(row);\r\n    });\r\n    setRowData(newRowData);\r\n  };\r\n\r\n\r\n\r\n  function updateOddRowData() {\r\n    let newRowData = rowData.map((row, index) => {\r\n      if (index % 2 !== 0) {\r\n        return { ...row, title: \"NewTitle\", body: \"NewBody\" };\r\n      }\r\n      return row;\r\n    });\r\n    setRowData(newRowData);\r\n  };\r\n\r\n  function saveFilters(textdata) {\r\n    if (textdata.length != 0 && !options.includes(textdata)) {\r\n      let filterCopy = JSON.parse(JSON.stringify(gridApi.getFilterModel()));\r\n      if (Object.keys(filterCopy).length !== 0) {\r\n        savedFilter.push(filterCopy);\r\n        options.push(textdata);\r\n        choices.push({\r\n          id: textdata,\r\n          value: filterCopy\r\n        });\r\n      }\r\n      else{\r\n        alert(\"No Filter selected \");\r\n      }\r\n    }\r\n    else {\r\n      alert(\"Filter creation failed check if name is already used or filter is created in grid\");\r\n    }\r\n  }\r\n\r\n  function saveSelection(textdata) {\r\n    if (textdata.length != 0 && !options.includes(textdata)) {\r\n    let rows = JSON.parse(JSON.stringify(gridApi.getSelectedRows()));\r\n    if (rows.length !== 0) {\r\n      savedSelectedRows.push(rows);\r\n      optionsSel.push(textdata);\r\n      choicesSel.push({\r\n        id: textdata,\r\n        value: rows\r\n      });\r\n    }\r\n    else{\r\n      alert(\"Nothing selected\");\r\n    }\r\n  }\r\n    else {\r\n      alert(\"Selection not saved, please select something\");\r\n    }\r\n  }\r\n\r\n  async function applyFilter(data) {\r\n    choices.forEach(function (value, key) {\r\n      if (data.label == options[key]) {\r\n        gridApi.setFilterModel(value.value);\r\n        let x = document.getElementsByClassName(\"Dropdown-placeholder placeClass is-selected\").item(0);\r\n        if (x != undefined) {\r\n          x.innerHTML = data.label;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  async function applyPresetFilter(data) {\r\n    choices.forEach(function (value, key) {\r\n      if (data.label == options[key]) {\r\n        gridApi.setFilterModel(value.value);\r\n        let x = document.getElementsByClassName(\"Dropdown-placeholder placeClass3 is-selected\").item(0);\r\n        if (x != undefined) {\r\n          x.innerHTML = data.label;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  async function applySelection(data) {\r\n    gridApi.deselectAll()\r\n    choicesSel.forEach(function (value, key) {\r\n      if (data.label == optionsSel[key]) {\r\n        gridApi.forEachNodeAfterFilterAndSort(function (rowNode, index) {\r\n          {\r\n            if (Object.keys(value.value).length !== 0)\r\n              value.value.map(row => {\r\n                if (row.id == rowNode.id) {\r\n\r\n                  rowNode.setSelected(true);\r\n                }\r\n              });\r\n          }\r\n        }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  async function removeAllFilters() {\r\n    gridApi.setFilterModel({});\r\n    let x = document.getElementsByClassName(\"Dropdown-placeholder placeClass is-selected\").item(0);\r\n    if (x != undefined) {\r\n      x.innerHTML = \"Saved Filters\";\r\n    }\r\n  }\r\n\r\n  async function removeAllSelection() {\r\n    gridApi.deselectAll();\r\n    let x = document.getElementsByClassName(\"Dropdown-placeholder placeClass2 is-selected\").item(0);\r\n    if (x != undefined) {\r\n      x.innerHTML = \"Saved Selctions\";\r\n    }\r\n\r\n  }\r\n\r\n  function onGridReady(params) {\r\n    setGridApi(params.api);\r\n    setGridColumnApi(params.columnApi);\r\n  };\r\n\r\n  const onQuickFilterChanged = () => {\r\n    gridApi.setQuickFilter(document.getElementById('quickFilter').value);\r\n  };\r\n\r\n\r\n  const externalFilterChanged = (newValue) => {\r\n    //  ageType = newValue;\r\n    //gridApi.onFilterChanged();\r\n  };\r\n\r\n  const isExternalFilterPresent = () => {\r\n    return true// ageType !== 'everyone';\r\n  };\r\n\r\n  const doesExternalFilterPass = (node) => {\r\n    switch (subsId) {\r\n      case 'below25':\r\n        return true\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ width: \"1000px\", height: \"600px\" }}>\r\n      <button className=\"button\" onClick={() => addRowData()}>Append row</button>\r\n      <button className=\"button\" onClick={() => removeRowData()}>\r\n        Delete rows\r\n        </button>\r\n\r\n\r\n\r\n\r\n      <ModalComponent  submitfunc={saveSelection} titleName =\"Save Selection\" />\r\n      <button className=\"button\" onClick={() => removeAllSelection()}>\r\n        Clear Selection\r\n        </button>\r\n\r\n      <button className=\"button\" onClick={() => removeAllFilters()}>\r\n        Remove all filters\r\n        </button>\r\n      <ModalComponent  submitfunc={saveFilters} titleName =\"Save Filter\" />\r\n      <Dropdown className='dropdown'\r\n        controlClassName='controlClass'\r\n        placeholderClassName='placeClass'\r\n        onChange={applyFilter}\r\n        options={options}\r\n\r\n        placeholder=\"Saved Filters\" />\r\n\r\n      <Dropdown className='dropdown'\r\n        controlClassName='controlClass'\r\n        placeholderClassName='placeClass2'\r\n        onChange={applySelection}\r\n        options={optionsSel}\r\n\r\n        placeholder=\"Saved Selections\" />\r\n\r\n\r\n      <Dropdown className='dropdown'\r\n        controlClassName='controlClass'\r\n        placeholderClassName='placeClass3'\r\n        onChange={applyPresetFilter}\r\n        options={optionsPreset}\r\n        placeholder=\"Preset Filters\" />\r\n\r\n\r\n\r\n      <div className=\"quickFilterDiv\">\r\n        Quick Filter\r\n        <input\r\n          type=\"text\"\r\n          onInput={() => onQuickFilterChanged()}\r\n          id=\"quickFilter\"\r\n          placeholder=\"filter on all cols..\"\r\n        />\r\n      </div>\r\n      <div\r\n        id=\"myGrid\"\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\"\r\n        }}\r\n        className=\"ag-theme-alpine\"\r\n      >\r\n        <AgGridReact\r\n          getRowNodeId={getRowNodeId}\r\n          columnDefs={columnDefs}\r\n          defaultColDef={defaultColDef}\r\n          rowSelection={\"multiple\"}\r\n          onGridReady={onGridReady}\r\n          immutableData={true}\r\n          rowData={rowData}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './cslblockview.css';\r\nfunction CSLBlockView(props) {\r\n\r\n     return(\r\n         <div className=\"csl-block-view\">\r\n         <h2> Variable Flux</h2>\r\n           <table className=\"table100 ver1 m-b-110\">\r\n            <thead>\r\n             <tr className=\"row100 head\">\r\n                <th>Variable Code</th>\r\n                <th>Variable Value</th>\r\n             </tr>\r\n             </thead>\r\n             <tbody>\r\n              {props.stocks.map(stock =>\r\n                <tr className=\"row100\">\r\n                  <td>{stock.stockCode}</td>\r\n                  <td>{Math.round(stock.stockPrice)}</td>\r\n                </tr>\r\n              )}\r\n             </tbody>\r\n           </table>\r\n\r\n           </div>\r\n         );\r\n\r\n\r\n }\r\n\r\n export default CSLBlockView;","import React, {Component} from 'react';\r\nimport { scaleLinear,scaleBand } from 'd3-scale';\r\nimport {axisLeft, axisBottom} from 'd3-axis';\r\nimport { max } from 'd3-array';\r\nimport { select } from 'd3-selection';\r\nimport './cslbarview.css';\r\nclass CSLBarView extends Component {\r\n\r\n  constructor(props)\r\n  {\r\n   super(props);\r\n     this.state = {\r\n        firstRender: true,\r\n        chart: null\r\n\r\n    }\r\n    this.drawChart = this.drawChart.bind(this)\r\n  }\r\n   componentDidUpdate() {\r\n      this.state.firstRender = false;\r\n      this.drawChart()\r\n   }\r\n  drawChart() {\r\n         const margin = 60;\r\n         const height =  250 - 2 * margin;//\r\n         const width =  300 - 2 * margin;\r\n         const xScale = scaleBand().range([0,width]).domain(this.props.stocks.map((s)=> s.stockName)).padding(0.2);\r\n         const yScale = scaleLinear().range([height,0]).domain([0,100]);\r\n         const svg = select(this.node);\r\n         const chart = svg.select('g').attr('transform','translate(60,60)');\r\n         chart.select('#axisLeft').call(axisLeft(yScale));\r\n         chart.select('#axisBottom').attr('transform','translate(0, 130)').call(axisBottom(xScale))   //250 -2*60\r\n         chart.selectAll('rect').data(this.props.stocks).enter().append('rect');\r\n         chart.selectAll('rect').data(this.props.stocks).exit().remove();\r\n         chart.selectAll('rect').data(this.props.stocks)\r\n                             .attr('x', (s) => xScale(s.stockName))\r\n                             .attr('y', (s) => yScale(s.stockPrice))\r\n                             .attr('height', (s) => 130 - yScale(s.stockPrice))\r\n                             .attr('width', xScale.bandwidth());\r\n     }\r\n\r\n\r\n\r\n  render(){\r\n     return ( <div className=\"csl-bar-view\"> <svg ref={node => this.node =node}>\r\n        <g>\r\n            <g id=\"axisLeft\">\r\n            </g>\r\n               <g id=\"axisBottom\">\r\n              </g>\r\n\r\n        </g>\r\n        </svg></div>);\r\n   }\r\n }\r\n\r\n export default CSLBarView;\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport './cslslider.css';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\nexport default function ContinuousSlider() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(30);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const upload = (event) => {\r\n    console.log(\"called\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"flux-rate\">\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Flux Rate (Under work)y\r\n\r\n        \r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs>\r\n          <Slider value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n      </Grid>\r\n      <div className=\"flux-button\">\r\n      <button    onClick={upload} >Change rate</button></div>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { scaleTime, scaleLinear, scaleBand } from 'd3-scale';\r\nimport { axisLeft, axisBottom } from 'd3-axis';\r\nimport { max } from 'd3-array';\r\nimport * as d3 from 'd3'\r\nimport { select } from 'd3-selection';\r\nimport './csltrackerview.css';\r\nimport CSLSlider from './CSLSlider';\r\n\r\nclass CSLTrackerView extends Component {\r\n\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         chart: null,\r\n      }\r\n      this.drawChart = this.drawChart.bind(this)\r\n      var prevPrice = 0;\r\n      var prevTime = 0;\r\n      var initialTime =Date.now();\r\n   }\r\n\r\n   async componentDidMount() {\r\n  \r\n      this.prevPrice = 0;\r\n      this.prevTime = 0;\r\n      this.initialTime =Date.now();;\r\n\r\n\r\n   }\r\n\r\n   async componentDidUpdate() {\r\n      this.drawChart();\r\n      \r\n   }\r\n   drawChart() {\r\n      //Margin is requied to be inside the viewport for axes\r\n      var margin = { top: 10, right: 40, bottom: 20, left: 40 };\r\n      var width = 500 - margin.left - margin.right;\r\n      var height = 150 - margin.top - margin.bottom;\r\n      //division below is time delta divided in the width\r\n      let widthOfSvg = document.getElementById(\"tracker\").width.baseVal.value - margin.left - margin.right;;\r\n      let xScale = scaleTime().range([0, width]).domain([this.initialTime, this.initialTime+  50 * 1000]).nice();\r\n      const yScale = scaleLinear().range([height, 0]).domain([0, 100]);\r\n      const svg = select(this.node);\r\n      const chart = svg.select('g').attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n      const xAxis = chart.select('#axisLeft').call(axisLeft(yScale));\r\n      const yAxis = chart.select('#axisBottom').attr('transform', \"translate(0,\" + height + \")\") .call(axisBottom(xScale));\r\n      const curve = d3.line().curve(d3.curveNatural);\r\n      var hScale = height / 100;\r\n      const points = [[this.prevTime ,  (height - (this.prevPrice) * hScale)], \r\n                      [(this.prevTime + width/110) , (height - (this.props.stocks.map(s => s.stockPrice)[this.props.variable]) * hScale)]];\r\n      chart\r\n           .append('path')\r\n           .attr('d', curve(points))\r\n           .attr('stroke', 'steelblue')\r\n           .attr('fill', 'none');\r\n      if(this.prevTime && this.prevTime>widthOfSvg-75)\r\n      {\r\n         this.prevTime=0\r\n         chart.selectAll(\"path\").remove();\r\n         this.initialTime=Date.now();\r\n      }\r\n      this.prevPrice = this.props.stocks.map(s => s.stockPrice)[this.props.variable];\r\n      this.prevTime = this.prevTime +  width/110;\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"csl-tracker-view\">\r\n            <div><CSLSlider></CSLSlider></div>\r\n            <div >\r\n               <svg ref={node => this.node = node} id=\"tracker\">\r\n\r\n                  <g>\r\n                     <g id=\"axisLeft\">\r\n                     </g>\r\n                     <g id=\"axisBottom\">\r\n                     </g>\r\n                  </g>\r\n               </svg></div>\r\n         </div>);\r\n   }\r\n}\r\n\r\nexport default CSLTrackerView;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './cslcontainer.css'\r\nimport CSLBlockView from './CSLBlockView';\r\n\r\nimport CSLBarView from './CSLBarView';\r\nimport CSLTrackerView from './CSLTrackerView';\r\nimport EventService from '../services/event.service';\r\n\r\nconst events = EventService.getPricesDataSource();\r\n\r\n\r\nclass CSLContainer  extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stocks: [],\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    \r\n    this.setState({isLoading: true});\r\n    events.onopen = event => console.log('open', event); // <2>\r\n    events.onmessage = event => {\r\n      const update = JSON.parse(event.data); // <3>\r\n      this.setState({stocks: update.lisStocks}); // <4>\r\n    };\r\n    events.onerror = event  => {\r\n     console.log(\"Server side shut\");\r\n     events.close();\r\n     this.setState({eventSource: null});\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const {stocks, isLoading} = this.state;\r\n     return(\r\n        <div className=\"stock-group-wrapper\">\r\n           <CSLBlockView stocks={stocks}/>\r\n         <CSLTrackerView stocks={stocks} variable={1}/>\r\n         <CSLTrackerView stocks={stocks}variable={0}/>\r\n         <CSLBarView stocks={stocks}/>\r\n        \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CSLContainer;\r\n\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import axios from \"axios\";\r\nimport {API_URL} from '../settings';\r\n\r\nconst http = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    Authorization: \"Bearer \" + localStorage.getItem(\"user\")\r\n  }\r\n});\r\n\r\nclass UploadFilesService {\r\n  upload(file, onUploadProgress) {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"payload\", file);\r\n\r\n    return http.post(\"/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\"\r\n      },\r\n      onUploadProgress,\r\n    });\r\n  }\r\n\r\n  getFiles() {\r\n  return http.get(\"/files\");\r\n  \r\n\r\n  }\r\n  getPublishFiles() {\r\n    return http.get(\"/getPublishFiles\");\r\n  }\r\n  publishFile(fileName) {\r\n    return http.get(\"/publishFile?fileName=\"+fileName);\r\n  }\r\n  deleteFile(fileName) {\r\n    return http.get(\"/deleteFile?fileName=\"+fileName);\r\n  }\r\n\r\n  getDownloadView(fileName)\r\n  {\r\n    return 'https://localhost:8443/api/downloadView?fileName='+fileName;\r\n  }\r\n\r\n}\r\n\r\nexport default new UploadFilesService();\r\n","import React, { Component } from \"react\";\r\nimport UploadService from \"../services/upload-files.service\";\r\n\r\nimport './upload.css';\r\n\r\nexport default class UploadFiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectFile = this.selectFile.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n    this.clickView = this.clickView.bind(this);\r\n    this.publish = this.publish.bind(this);\r\n\r\n    this.state = {\r\n      selectedFiles: undefined,\r\n      currentFile: undefined,\r\n      progress: 0,\r\n      message: \"\",\r\n      fileInfos: [],\r\n      publishInfo: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  //get the file in the temp folder\r\n    UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        fileInfos: response.data,\r\n      });\r\n    });\r\n//get the file in the publish folder\r\n    UploadService.getPublishFiles().then((response) => {\r\n      this.setState({\r\n        publishInfo: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  upload() {\r\n    let currentFile = this.state.selectedFiles[0];\r\n    this.setState({\r\n      progress: 0,\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, (event) => {\r\n      this.setState({\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      });\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          fileInfos: files.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Could not upload the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n\r\nclickView(event)\r\n{\r\n  var URL = 'https://localhost:8443/api/downloadView?fileName='+event.target.text;\r\n  window.open(URL);\r\n}\r\nasync publish(data)\r\n {\r\n    let response = await UploadService.publishFile(data);\r\n    if(response.data){\r\n       await this.setState({ publishInfo: [...this.state.publishInfo, {url:\"\", name:data}]});\r\n     }\r\n    else{\r\n      alert(\"Already Published. Publish new version?\");\r\n    }\r\n}\r\n\r\nasync delete(data)\r\n {\r\n    let response = UploadService.deleteFile(data);\r\n    response.then( e =>{if(e.data){\r\n      UploadService.getFiles().then((response) => {\r\n        this.setState({\r\n          fileInfos: response.data,\r\n        });\r\n      });\r\n    }\r\n  });\r\n }\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      selectedFiles,\r\n      currentFile,\r\n      progress,\r\n      message,\r\n      fileInfos,\r\n      publishInfo\r\n    } = this.state;\r\n    console.table(publishInfo);\r\n      return (\r\n      <div>\r\n        {currentFile && progress!=100 &&(\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n              role=\"progressbar\"\r\n              aria-valuenow={progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              style={{ width: progress + \"%\" }}\r\n            >\r\n              {progress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"bar-upload\">\r\n        \r\n          <input type=\"file\" onChange={this.selectFile} />\r\n          <button className=\"button3\"   disabled={!selectedFiles} onClick={this.upload} >\r\n          Upload\r\n        </button>\r\n        \r\n       \r\n    </div>\r\n        <div className=\"alert alert-light\" role=\"alert\">\r\n          {message}\r\n        </div>\r\n\r\n        <div className=\"card-upload\">\r\n          <div className=\"card-header\">List of Files</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {fileInfos &&\r\n              fileInfos.map((file, index) => (\r\n                <div className=\"bar-upload\">\r\n                <li className=\"list-group-item\" key={index}>\r\n                  { \r\n                  publishInfo.map(e=>e.name ==file.name).includes(true)?  \r\n                                <div className=\"led-box\"> <div className=\"led-green\"></div></div>\r\n                                :<div className=\"led-box\"> <div className=\"led-grey\"></div></div>}\r\n                  <a className=\"a-upload\" onClick={this.clickView}>{file.name}</a>\r\n                  <a className=\"button1\"  onClick={()=>this.publish(file.name)}>Publish </a>\r\n                  <a className=\"button1\"  onClick={()=>this.delete(file.name)}>Delete </a>\r\n                 </li>\r\n                </div>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport React from 'react';\r\nimport './example.css';\r\n\r\nexport default function Example(props: any): React.ReactElement {\r\n  return (\r\n    <div className=\"example\">\r\n      <div className=\"title\">{props.title}</div>\r\n      <div className=\"demo\">{props.children}</div>\r\n    </div>\r\n  );\r\n}","/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport React from 'react';\r\nimport Example from './example';\r\nimport GooglePayButton from '@google-pay/button-react';\r\n\r\nexport default function BasicExample(props: any): React.ReactElement {\r\n  return (\r\n    <Example title=\"Mastercard and VISA\">\r\n      <GooglePayButton\r\n        environment=\"TEST\"\r\n        paymentRequest={{\r\n          apiVersion: 2,\r\n          apiVersionMinor: 0,\r\n          allowedPaymentMethods: [\r\n            {\r\n              type: 'CARD',\r\n              parameters: {\r\n                allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n                allowedCardNetworks: ['MASTERCARD', 'VISA'],\r\n              },\r\n              tokenizationSpecification: {\r\n                type: 'PAYMENT_GATEWAY',\r\n                parameters: {\r\n                  gateway: 'example',\r\n                  gatewayMerchantId: 'exampleGatewayMerchantId',\r\n                },\r\n              },\r\n            },\r\n          ],\r\n          merchantInfo: {\r\n            merchantId: '12345678901234567890',\r\n            merchantName: 'Demo Merchant',\r\n          },\r\n          transactionInfo: {\r\n            totalPriceStatus: 'FINAL',\r\n            totalPriceLabel: 'Total',\r\n            totalPrice: props.amount,\r\n            currencyCode: 'USD',\r\n            countryCode: 'US',\r\n          },\r\n        }}\r\n        onLoadPaymentData={paymentRequest => {\r\n          console.log('Success', paymentRequest);\r\n        }}\r\n        existingPaymentMethodRequired={props.existingPaymentMethodRequired}\r\n        buttonColor={props.buttonColor}\r\n        buttonType={props.buttonType}\r\n      />\r\n    </Example>\r\n  );\r\n}","/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport './payment.css';\r\nimport BasicExample from './basic.example';\r\n\r\n\r\nconst GooglePayment: React.FC = () => {\r\n  const [amount, setAmount] = useState('100.00');\r\n  const [existingPaymentMethodRequired, setExistingPaymentMethodRequired] = useState(false);\r\n  const [buttonColor, setButtonColor] = useState('default');\r\n  const [buttonType, setButtonType] = useState('buy');\r\n\r\n  function handleAmountChange(event: any) {\r\n    setAmount(event.target.value);\r\n  }\r\n\r\n  function handleExistingPaymentMethodRequired(event: any) {\r\n    setExistingPaymentMethodRequired(event.target.value === 'yes');\r\n  }\r\n\r\n  function handleColorChange(event: any) {\r\n    setButtonColor(event.target.value);\r\n  }\r\n\r\n  function handleTypeChange(event: any) {\r\n    setButtonType(event.target.value);\r\n  }\r\n\r\n  const props = {\r\n    amount,\r\n    existingPaymentMethodRequired,\r\n    buttonColor: buttonColor,\r\n    buttonType: buttonType,\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"params\">\r\n        <label>\r\n          <span>Default amount:</span>\r\n          <input type=\"text\" defaultValue={amount} onBlur={handleAmountChange} />\r\n        </label>\r\n        <label>\r\n          <span>Payment method required:</span>\r\n          <select onChange={handleExistingPaymentMethodRequired} value={existingPaymentMethodRequired ? 'yes' : 'no'}>\r\n            <option value=\"no\">No</option>\r\n            <option value=\"yes\">Yes</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          <span>Button color:</span>\r\n          <select onChange={handleColorChange} value={buttonColor}>\r\n            <option value=\"default\">default</option>\r\n            <option value=\"black\">black</option>\r\n            <option value=\"white\">white</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          <span>Button type:</span>\r\n          <select onChange={handleTypeChange} value={buttonType}>\r\n            <option value=\"buy\">buy</option>\r\n            <option value=\"plain\">plain</option>\r\n            <option value=\"donate\">donate</option>\r\n            <option value=\"long\">long</option>\r\n            <option value=\"short\">short</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <BasicExample {...props} />\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GooglePayment;","import React, { Component } from \"react\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Events from \"./components/events.component\";\r\nimport CSLContainer from './charts/CSLContainer';\r\nimport { logout } from \"./slices/auth.slice\";\r\nimport { clearMessage } from \"./actions/message\";\r\nimport { history } from './helpers/history';\r\nimport UploadFiles from \"./upload/upload-files.component\";\r\n\r\nimport GooglePayment from \"./payment/payment.component\";\r\n\r\nexport default function App(props) {\r\n\r\n  const token = useSelector(state => state.token);\r\n  const currentUser = useSelector(state => state.username);\r\n\r\n\r\n\r\n    return (\r\n      <Router history={history}>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n             Sid Blog\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/home\"} className=\"nav-link\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/home\" className=\"nav-link\" onClick={this.logOut}>\r\n                    LogOut\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/upload\"} className=\"nav-link\">\r\n                    Upload\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/eventGrid\"} className=\"nav-link\">\r\n                    EventGrid\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n                <div className=\"navbar-nav ml-auto\">\r\n                \r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    Sign Up\r\n                  </Link>\r\n                </li>\r\n               \r\n                </div>\r\n\r\n               \r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              {currentUser ?<Route exact path=\"/upload\"   component={UploadFiles} />\r\n              :<Route exact path=\"/upload\"   component={Login} />}\r\n              {currentUser ?<Route exact path=\"/eventGrid\"   component={Events} />\r\n              :<Route exact path=\"/eventGrid\"   component={Login} />}\r\n              \r\n              <Route exact path=\"/d3\" component = {CSLContainer} />\r\n              <Route exact path=\"/payment\" component = {GooglePayment} />\r\n            \r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can chađinge\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}