{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/index.js","actions/types.js","store.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","helpers/columnDefHelper.js","components/modal.component.js","components/events.component.js","charts/CSLBlockView.js","charts/CSLBarView.js","charts/CSLSlider.js","charts/CSLTrackerView.js","charts/CSLContainer.js","helpers/history.js","upload/upload-files.service.js","upload/upload-files.component.js","payment/example.tsx","payment/basic.example.tsx","payment/payment.component.tsx","App.js","actions/message.js","serviceWorker.js","index.js"],"names":["user","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","action","type","payload","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","API_URL","username","password","axios","post","then","response","console","log","data","token","setItem","removeItem","email","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","loading","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","error","toString","reject","push","window","location","reload","catch","to","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","accessToken","Authorization","get","headers","Home","content","columnDefs","field","minWidth","checkboxSelection","filter","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","defaultColDef","flex","closeOnApply","customStyles","top","left","right","bottom","marginRight","transform","ModalComponent","React","useState","textValue","setTextValue","modalIsOpen","setIsOpen","closeModal","a","submitfunc","onClick","titleName","isOpen","onAfterOpen","onRequestClose","contentLabel","textvalue","event","id","Math","random","substr","sseEvents","EventSource","onopen","onerror","close","savedFilter","savedSelectedRows","options","choices","optionsSel","choicesSel","optionsPreset","Events","rowData","setRowData","gridApi","setGridApi","setGridColumnApi","forEach","key","label","setFilterModel","x","document","getElementsByClassName","item","undefined","innerHTML","deselectAll","forEachNodeAfterFilterAndSort","rowNode","index","Object","keys","map","row","setSelected","onmessage","update","JSON","parse","width","height","fetch","selectedRow","getSelectedRows","newRowData","includes","removeRowData","textdata","alert","rows","stringify","removeAllSelection","removeAllFilters","filterCopy","getFilterModel","controlClassName","placeholderClassName","placeholder","onInput","setQuickFilter","getElementById","getRowNodeId","rowSelection","onGridReady","params","api","columnApi","immutableData","CSLBlockView","stocks","stock","stockCode","round","stockPrice","CSLBarView","firstRender","chart","drawChart","xScale","scaleBand","range","domain","s","stockName","padding","yScale","scaleLinear","select","node","attr","call","axisLeft","axisBottom","selectAll","enter","append","exit","remove","bandwidth","useStyles","makeStyles","root","ContinuousSlider","setValue","Typography","gutterBottom","Grid","container","spacing","xs","Slider","newValue","aria-labelledby","CSLTrackerView","Date","now","prevPrice","prevTime","initialTime","margin","widthOfSvg","baseVal","scaleTime","nice","curve","d3","hScale","points","variable","events","CSLContainer","isLoading","lisStocks","eventSource","createBrowserHistory","http","create","baseURL","file","onUploadProgress","formData","FormData","fileName","UploadFiles","selectFile","upload","clickView","publish","selectedFiles","currentFile","progress","fileInfos","publishInfo","UploadService","getFiles","getPublishFiles","files","loaded","total","URL","text","open","publishFile","url","deleteFile","table","aria-valuenow","aria-valuemin","aria-valuemax","delete","Example","title","children","BasicExample","environment","paymentRequest","apiVersion","apiVersionMinor","allowedPaymentMethods","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","amount","currencyCode","countryCode","onLoadPaymentData","existingPaymentMethodRequired","buttonColor","buttonType","GooglePayment","setAmount","setExistingPaymentMethodRequired","setButtonColor","setButtonType","defaultValue","onBlur","App","logOut","showModeratorBoard","showAdminBoard","currentUser","listen","logout","href","exact","path","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4d14782.chunk.js","sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = localStorage.getItem(\"user\") ;\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n});\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"https://localhost:8443/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"login\", { username, password })\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.token) {\r\n          localStorage.setItem(\"user\", response.data.token);\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"register\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n  isLoggedIn() {\r\n   if( localStorage.getItem(\"user\")) return true\r\n   else return false;\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password))\r\n        .then(() => {\r\n          history.push(\"/home\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n     isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n  return AuthService.register(username, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user: data },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n    \r\n    if (this.state.successful) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.username, this.state.email, this.state.password)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n    if (this.state.successful)\r\n    {\r\n      return ( <Redirect to=\"/home\"/>)\r\n    }\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n        \r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","export default function authHeader() {\r\n  const accessToken = localStorage.getItem(\"user\");\r\n\r\n  if (accessToken) {\r\n    // For Spring Boot back-end\r\n    // return { Authorization: \"Bearer \" + user.accessToken };\r\n\r\n    // for Node.js Express back-end\r\n    \r\n    return { Authorization: \"Bearer \" + accessToken } ;\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"https://localhost:8443/api/test/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\", {\r\n      headers: authHeader()\r\n     });\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport {  Link } from \"react-router-dom\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return !localStorage.getItem(\"user\")?\r\n     (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>Sid Blog</h3>\r\n          <p>Following are some scribbles from the coding learning and experiences </p>\r\n          <b>Please  <Link to={\"/login\"}> Login </Link> to see the main page</b>\r\n         \r\n        </header>\r\n      </div>\r\n    )\r\n    :\r\n    (  <div className=\"container\">\r\n         <header className=\"jumbotron\">\r\n       <p><Link to={\"/eventGrid\"}> Event Grid </Link>with Adhoc reactivity design</p>\r\n       <p><Link to={\"/upload\"}> Upload </Link> Download functionality on with filesystem </p>\r\n       <p><Link to={\"/kafka\"}> Kafka </Link> high transaction simulator</p>\r\n       <p><Link to={\"/spark\"}> Spark </Link> for file based analytics</p>\r\n       <p><Link to={\"/d3\"}> D3 Charts </Link> with high repaint</p>\r\n\r\n\r\n      </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n\r\nexport const columnDefs =  [\r\n    {\r\n      field: \"userId\",\r\n      minWidth: 20,\r\n      checkboxSelection:true,\r\n      filter: 'agTextColumnFilter',\r\n      headerCheckboxSelectionFilteredOnly:true,\r\n      headerCheckboxSelection:true\r\n    },\r\n    {\r\n      field: \"id\",\r\n      minWidth: 20,\r\n      filter: 'agTextColumnFilter'\r\n    },\r\n    {\r\n      field: \"title\",\r\n      minWidth: 350,\r\n      filter: 'agTextColumnFilter'\r\n    },\r\n    {\r\n      field: \"body\",\r\n      minWidth: 350,\r\n      filter: 'agTextColumnFilter',\r\n\r\n    },\r\n\r\n  ];\r\n export const  defaultColDef = {\r\n    flex: 1,\r\n    minWidth: 50,\r\n    filter: true,\r\n    closeOnApply: true,\r\n\r\n  }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Modal from 'react-modal';\r\nimport \"./events.css\";\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)'\r\n  }\r\n};\r\n\r\nexport default function ModalComponent(props){\r\n  const [textValue, setTextValue] = React.useState(\"\");\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n \r\n  function afterOpenModal() {\r\n\r\n  }\r\n \r\n async function closeModal(){\r\n    await props.submitfunc(textValue);\r\n    setIsOpen(false);\r\n    \r\n  }\r\n\r\n  function   handleChange(event) {\r\n      console.log(props);\r\n    setTextValue( event.target.value);\r\n  }\r\n \r\n    return (\r\n       \r\n        <>\r\n        <button className=\"button\" onClick={openModal}>{props.titleName}</button>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n \r\n       \r\n         <form onSubmit={closeModal}>\r\n                <label>\r\n                Provide a Name\r\n                <input type=\"text\" value={props.textvalue} onChange={handleChange}  />\r\n                </label>\r\n                <input className=\"button\" type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n           \r\n      \r\n        </Modal>\r\n     </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { render } from \"react-dom\";\r\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\r\nimport { columnDefs, defaultColDef } from '../helpers/columnDefHelper';\r\nimport \"ag-grid-community\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport \"./events.css\";\r\nimport Dropdown from 'react-dropdown';\r\nimport ModalComponent from './modal.component';\r\n\r\nlet id = Math.random().toString(36).substr(2, 9);\r\n\r\n\r\n\r\nlet sseEvents = new EventSource(\"https://localhost:8443/getHttp?subsId=\" + id);\r\nsseEvents.onopen = event => console.log('open', event);\r\nsseEvents.onerror = event => {\r\n  console.log(\"Server side shut\");\r\n  sseEvents.close();\r\n  sseEvents = new EventSource(\"https://localhost:8443/getHttp?subsId=\" + id);\r\n}\r\nconst savedFilter = [];\r\nconst savedSelectedRows = [];\r\nconst options = [];\r\nconst choices = [];\r\nlet value = choices[0];\r\n\r\n\r\nconst optionsSel = [];\r\nconst choicesSel = [];\r\nlet valueSel = optionsSel[0];\r\nconst defaultOptionSel = optionsSel[0];\r\n\r\nconst optionsPreset = [];\r\nconst choicesPreset = [{ id: 0, value: \"NoFilter\" }];\r\n\r\n\r\nexport default function Events(props) {\r\n\r\n  const [rowData, setRowData] = useState([]);\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [gridColumnApi, setGridColumnApi] = useState(null);\r\n\r\n\r\n  function getRowNodeId(data) {\r\n    return data.id;\r\n  };\r\n\r\n  sseEvents.onmessage = event => {\r\n    const update = event.data;\r\n    setRowData(JSON.parse(update));\r\n  };\r\n\r\n  function addRowData(newData) {\r\n    fetch('https://localhost:8443/event?subsId=' + id + \"&event=sample\");\r\n  };\r\n\r\n  function removeRowData() {\r\n    let selectedRow = gridApi.getSelectedRows();\r\n    let newRowData = rowData.filter(row => {\r\n      return !selectedRow.includes(row);\r\n    });\r\n    setRowData(newRowData);\r\n  };\r\n\r\n\r\n\r\n  function updateOddRowData() {\r\n    let newRowData = rowData.map((row, index) => {\r\n      if (index % 2 !== 0) {\r\n        return { ...row, title: \"NewTitle\", body: \"NewBody\" };\r\n      }\r\n      return row;\r\n    });\r\n    setRowData(newRowData);\r\n  };\r\n\r\n  function saveFilters(textdata) {\r\n    if (textdata.length != 0 && !options.includes(textdata)) {\r\n      let filterCopy = JSON.parse(JSON.stringify(gridApi.getFilterModel()));\r\n      if (Object.keys(filterCopy).length !== 0) {\r\n        savedFilter.push(filterCopy);\r\n        options.push(textdata);\r\n        choices.push({\r\n          id: textdata,\r\n          value: filterCopy\r\n        });\r\n      }\r\n      else{\r\n        alert(\"No Filter selected \");\r\n      }\r\n    }\r\n    else {\r\n      alert(\"Filter creation failed check if name is already used or filter is created in grid\");\r\n    }\r\n  }\r\n\r\n  function saveSelection(textdata) {\r\n    if (textdata.length != 0 && !options.includes(textdata)) {\r\n    let rows = JSON.parse(JSON.stringify(gridApi.getSelectedRows()));\r\n    if (rows.length !== 0) {\r\n      savedSelectedRows.push(rows);\r\n      optionsSel.push(textdata);\r\n      choicesSel.push({\r\n        id: textdata,\r\n        value: rows\r\n      });\r\n    }\r\n    else{\r\n      alert(\"Nothing selected\");\r\n    }\r\n  }\r\n    else {\r\n      alert(\"Selection not saved, please select something\");\r\n    }\r\n  }\r\n\r\n  async function applyFilter(data) {\r\n    choices.forEach(function (value, key) {\r\n      if (data.label == options[key]) {\r\n        gridApi.setFilterModel(value.value);\r\n        let x = document.getElementsByClassName(\"Dropdown-placeholder placeClass is-selected\").item(0);\r\n        if (x != undefined) {\r\n          x.innerHTML = data.label;\r\n        }\r\n      }\r\n    })\r\n  }\r\n  async function applyPresetFilter(data) {\r\n    choices.forEach(function (value, key) {\r\n      if (data.label == options[key]) {\r\n        gridApi.setFilterModel(value.value);\r\n        let x = document.getElementsByClassName(\"Dropdown-placeholder placeClass3 is-selected\").item(0);\r\n        if (x != undefined) {\r\n          x.innerHTML = data.label;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  async function applySelection(data) {\r\n    gridApi.deselectAll()\r\n    choicesSel.forEach(function (value, key) {\r\n      if (data.label == optionsSel[key]) {\r\n        gridApi.forEachNodeAfterFilterAndSort(function (rowNode, index) {\r\n          {\r\n            if (Object.keys(value.value).length !== 0)\r\n              value.value.map(row => {\r\n                if (row.id == rowNode.id) {\r\n\r\n                  rowNode.setSelected(true);\r\n                }\r\n              });\r\n          }\r\n        }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  async function removeAllFilters() {\r\n    gridApi.setFilterModel({});\r\n    let x = document.getElementsByClassName(\"Dropdown-placeholder placeClass is-selected\").item(0);\r\n    if (x != undefined) {\r\n      x.innerHTML = \"Saved Filters\";\r\n    }\r\n  }\r\n\r\n  async function removeAllSelection() {\r\n    gridApi.deselectAll();\r\n    let x = document.getElementsByClassName(\"Dropdown-placeholder placeClass2 is-selected\").item(0);\r\n    if (x != undefined) {\r\n      x.innerHTML = \"Saved Selctions\";\r\n    }\r\n\r\n  }\r\n\r\n  function onGridReady(params) {\r\n    setGridApi(params.api);\r\n    setGridColumnApi(params.columnApi);\r\n  };\r\n\r\n  const onQuickFilterChanged = () => {\r\n    gridApi.setQuickFilter(document.getElementById('quickFilter').value);\r\n  };\r\n\r\n\r\n  const externalFilterChanged = (newValue) => {\r\n    //  ageType = newValue;\r\n    //gridApi.onFilterChanged();\r\n  };\r\n\r\n  const isExternalFilterPresent = () => {\r\n    return true// ageType !== 'everyone';\r\n  };\r\n\r\n  const doesExternalFilterPass = (node) => {\r\n    switch (id) {\r\n      case 'below25':\r\n        return true\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ width: \"1000px\", height: \"600px\" }}>\r\n      <button className=\"button\" onClick={() => addRowData()}>Append row</button>\r\n      <button className=\"button\" onClick={() => removeRowData()}>\r\n        Delete rows\r\n        </button>\r\n\r\n\r\n\r\n\r\n      <ModalComponent  submitfunc={saveSelection} titleName =\"Save Selection\" />\r\n      <button className=\"button\" onClick={() => removeAllSelection()}>\r\n        Clear Selection\r\n        </button>\r\n\r\n      <button className=\"button\" onClick={() => removeAllFilters()}>\r\n        Remove all filters\r\n        </button>\r\n      <ModalComponent  submitfunc={saveFilters} titleName =\"Save Filter\" />\r\n      <Dropdown className='dropdown'\r\n        controlClassName='controlClass'\r\n        placeholderClassName='placeClass'\r\n        onChange={applyFilter}\r\n        options={options}\r\n\r\n        placeholder=\"Saved Filters\" />\r\n\r\n      <Dropdown className='dropdown'\r\n        controlClassName='controlClass'\r\n        placeholderClassName='placeClass2'\r\n        onChange={applySelection}\r\n        options={optionsSel}\r\n\r\n        placeholder=\"Saved Selections\" />\r\n\r\n\r\n      <Dropdown className='dropdown'\r\n        controlClassName='controlClass'\r\n        placeholderClassName='placeClass3'\r\n        onChange={applyPresetFilter}\r\n        options={optionsPreset}\r\n        placeholder=\"Preset Filters\" />\r\n\r\n\r\n\r\n      <div className=\"quickFilterDiv\">\r\n        Quick Filter\r\n        <input\r\n          type=\"text\"\r\n          onInput={() => onQuickFilterChanged()}\r\n          id=\"quickFilter\"\r\n          placeholder=\"filter on all cols..\"\r\n        />\r\n      </div>\r\n      <div\r\n        id=\"myGrid\"\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\"\r\n        }}\r\n        className=\"ag-theme-alpine\"\r\n      >\r\n        <AgGridReact\r\n          getRowNodeId={getRowNodeId}\r\n          columnDefs={columnDefs}\r\n          defaultColDef={defaultColDef}\r\n          rowSelection={\"multiple\"}\r\n          onGridReady={onGridReady}\r\n          immutableData={true}\r\n          rowData={rowData}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './cslblockview.css';\r\nfunction CSLBlockView(props) {\r\n\r\n     return(\r\n         <div className=\"csl-block-view\">\r\n         <h2> Variable Flux</h2>\r\n           <table className=\"table100 ver1 m-b-110\">\r\n            <thead>\r\n             <tr className=\"row100 head\">\r\n                <th>Variable Code</th>\r\n                <th>Variable Value</th>\r\n             </tr>\r\n             </thead>\r\n             <tbody>\r\n              {props.stocks.map(stock =>\r\n                <tr className=\"row100\">\r\n                  <td>{stock.stockCode}</td>\r\n                  <td>{Math.round(stock.stockPrice)}</td>\r\n                </tr>\r\n              )}\r\n             </tbody>\r\n           </table>\r\n\r\n           </div>\r\n         );\r\n\r\n\r\n }\r\n\r\n export default CSLBlockView;","import React, {Component} from 'react';\r\nimport { scaleLinear,scaleBand } from 'd3-scale';\r\nimport {axisLeft, axisBottom} from 'd3-axis';\r\nimport { max } from 'd3-array';\r\nimport { select } from 'd3-selection';\r\nimport './cslbarview.css';\r\nclass CSLBarView extends Component {\r\n\r\n  constructor(props)\r\n  {\r\n   super(props);\r\n     this.state = {\r\n        firstRender: true,\r\n        chart: null\r\n\r\n    }\r\n    this.drawChart = this.drawChart.bind(this)\r\n  }\r\n   componentDidUpdate() {\r\n      this.state.firstRender = false;\r\n      this.drawChart()\r\n   }\r\n  drawChart() {\r\n         const margin = 60;\r\n         const height =  250 - 2 * margin;//\r\n         const width =  300 - 2 * margin;\r\n         const xScale = scaleBand().range([0,width]).domain(this.props.stocks.map((s)=> s.stockName)).padding(0.2);\r\n         const yScale = scaleLinear().range([height,0]).domain([0,100]);\r\n         const svg = select(this.node);\r\n         const chart = svg.select('g').attr('transform','translate(60,60)');\r\n         chart.select('#axisLeft').call(axisLeft(yScale));\r\n         chart.select('#axisBottom').attr('transform','translate(0, 130)').call(axisBottom(xScale))   //250 -2*60\r\n         chart.selectAll('rect').data(this.props.stocks).enter().append('rect');\r\n         chart.selectAll('rect').data(this.props.stocks).exit().remove();\r\n         chart.selectAll('rect').data(this.props.stocks)\r\n                             .attr('x', (s) => xScale(s.stockName))\r\n                             .attr('y', (s) => yScale(s.stockPrice))\r\n                             .attr('height', (s) => 130 - yScale(s.stockPrice))\r\n                             .attr('width', xScale.bandwidth());\r\n     }\r\n\r\n\r\n\r\n  render(){\r\n     return ( <div className=\"csl-bar-view\"> <svg ref={node => this.node =node}>\r\n        <g>\r\n            <g id=\"axisLeft\">\r\n            </g>\r\n               <g id=\"axisBottom\">\r\n              </g>\r\n\r\n        </g>\r\n        </svg></div>);\r\n   }\r\n }\r\n\r\n export default CSLBarView;\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport './cslslider.css';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n});\r\n\r\nexport default function ContinuousSlider() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(30);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const upload = (event) => {\r\n    console.log(\"called\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"flux-rate\">\r\n      <Typography id=\"continuous-slider\" gutterBottom>\r\n        Flux Rate (Under work)\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs>\r\n          <Slider value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n      </Grid>\r\n      <div className=\"flux-button\">\r\n      <button    onClick={upload} >Change rate</button></div>\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { scaleTime, scaleLinear, scaleBand } from 'd3-scale';\r\nimport { axisLeft, axisBottom } from 'd3-axis';\r\nimport { max } from 'd3-array';\r\nimport * as d3 from 'd3'\r\nimport { select } from 'd3-selection';\r\nimport './csltrackerview.css';\r\nimport CSLSlider from './CSLSlider';\r\n\r\nclass CSLTrackerView extends Component {\r\n\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         chart: null,\r\n     \r\n      }\r\n      this.drawChart = this.drawChart.bind(this)\r\n      var prevPrice = 0;\r\n      var prevTime = 0;\r\n      var initialTime =Date.now();\r\n   }\r\n\r\n   async componentDidMount() {\r\n  \r\n      this.prevPrice = 0;\r\n      this.prevTime = 0;\r\n      this.initialTime =Date.now();;\r\n\r\n\r\n   }\r\n\r\n   async componentDidUpdate() {\r\n      this.drawChart();\r\n      \r\n   }\r\n   drawChart() {\r\n      //Margin is requied to be inside the viewport for axes\r\n      var margin = { top: 10, right: 40, bottom: 20, left: 40 };\r\n      var width = 500 - margin.left - margin.right;\r\n      var height = 150 - margin.top - margin.bottom;\r\n      \r\n    \r\n      \r\n      //division below is time delta divided in the width\r\n      let widthOfSvg = document.getElementById(\"tracker\").width.baseVal.value - margin.left - margin.right;;\r\n      let xScale = scaleTime().range([0, width]).domain([this.initialTime, this.initialTime+  50 * 1000]).nice();\r\n      const yScale = scaleLinear().range([height, 0]).domain([0, 100]);\r\n      const svg = select(this.node);\r\n      const chart = svg.select('g').attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n      const xAxis = chart.select('#axisLeft').call(axisLeft(yScale));\r\n      const yAxis = chart.select('#axisBottom').attr('transform', \"translate(0,\" + height + \")\")\r\n         .call(axisBottom(xScale));\r\n      const curve = d3.line().curve(d3.curveNatural);\r\n      var hScale = height / 100;\r\n      const points = [[this.prevTime ,  (height - (this.prevPrice) * hScale)], \r\n                      [(this.prevTime + width/110) , (height - (this.props.stocks.map(s => s.stockPrice)[this.props.variable]) * hScale)]];\r\n      chart\r\n           .append('path')\r\n           .attr('d', curve(points))\r\n           .attr('stroke', 'steelblue')\r\n           .attr('fill', 'none');\r\n\r\n      \r\n      if(this.prevTime && this.prevTime>widthOfSvg-75)\r\n      {\r\n         this.prevTime=0\r\n         chart.selectAll(\"path\").remove();\r\n         this.initialTime=Date.now();\r\n        // this.drawChart();\r\n      }\r\n      \r\n      this.prevPrice = this.props.stocks.map(s => s.stockPrice)[this.props.variable];\r\n      this.prevTime = this.prevTime +  width/110;\r\n      console.log(this.prevTime);\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"csl-tracker-view\">\r\n            <div><CSLSlider></CSLSlider></div>\r\n            <div >\r\n               <svg ref={node => this.node = node} id=\"tracker\">\r\n\r\n                  <g>\r\n                     <g id=\"axisLeft\">\r\n                     </g>\r\n                     <g id=\"axisBottom\">\r\n                     </g>\r\n                  </g>\r\n               </svg></div>\r\n         </div>);\r\n   }\r\n}\r\n\r\nexport default CSLTrackerView;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './cslcontainer.css'\r\nimport CSLBlockView from './CSLBlockView';\r\n\r\nimport CSLBarView from './CSLBarView';\r\nimport CSLTrackerView from './CSLTrackerView';\r\n\r\nconst events = new EventSource(\"https://localhost:8443/getPrices\");\r\n\r\n\r\nclass CSLContainer  extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stocks: [],\r\n      isLoading: false\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    \r\n    this.setState({isLoading: true});\r\n    events.onopen = event => console.log('open', event); // <2>\r\n    events.onmessage = event => {\r\n      const update = JSON.parse(event.data); // <3>\r\n      this.setState({stocks: update.lisStocks}); // <4>\r\n    };\r\n    events.onerror = event  => {\r\n     console.log(\"Server side shut\");\r\n     events.close();\r\n     this.setState({eventSource: null});\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const {stocks, isLoading} = this.state;\r\n     return(\r\n        <div className=\"stock-group-wrapper\">\r\n           <CSLBlockView stocks={stocks}/>\r\n         <CSLTrackerView stocks={stocks} variable={1}/>\r\n         <CSLTrackerView stocks={stocks}variable={0}/>\r\n         <CSLBarView stocks={stocks}/>\r\n        \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CSLContainer;\r\n\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import axios from \"axios\";\r\n\r\nconst http = axios.create({\r\n  baseURL: \"https://localhost:8443\",\r\n});\r\n\r\nclass UploadFilesService {\r\n  upload(file, onUploadProgress) {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"payload\", file);\r\n\r\n    return http.post(\"/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress,\r\n    });\r\n  }\r\n\r\n  getFiles() {\r\n    return http.get(\"/files\");\r\n  }\r\n  getPublishFiles() {\r\n    return http.get(\"/getPublishFiles\");\r\n  }\r\n  publishFile(fileName) {\r\n    return http.get(\"/publishFile?fileName=\"+fileName);\r\n  }\r\n  deleteFile(fileName) {\r\n    return http.get(\"/deleteFile?fileName=\"+fileName);\r\n  }\r\n\r\n}\r\n\r\nexport default new UploadFilesService();\r\n","import React, { Component } from \"react\";\r\nimport UploadService from \"./upload-files.service\";\r\n\r\nimport './upload.css';\r\n\r\nexport default class UploadFiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectFile = this.selectFile.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n    this.clickView = this.clickView.bind(this);\r\n    this.publish = this.publish.bind(this);\r\n\r\n    this.state = {\r\n      selectedFiles: undefined,\r\n      currentFile: undefined,\r\n      progress: 0,\r\n      message: \"\",\r\n      fileInfos: [],\r\n      publishInfo: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n  //get the file in the temp folder\r\n    UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        fileInfos: response.data,\r\n      });\r\n    });\r\n//get the file in the publish folder\r\n    UploadService.getPublishFiles().then((response) => {\r\n      this.setState({\r\n        publishInfo: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  upload() {\r\n    let currentFile = this.state.selectedFiles[0];\r\n    this.setState({\r\n      progress: 0,\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, (event) => {\r\n      this.setState({\r\n        progress: Math.round((100 * event.loaded) / event.total),\r\n      });\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          fileInfos: files.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          progress: 0,\r\n          message: \"Could not upload the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n\r\nclickView(event)\r\n{\r\n  var URL = 'https://localhost:8443/api/downloadView?fileName='+event.target.text;\r\n  window.open(URL);\r\n}\r\nasync publish(data)\r\n {\r\n    let response = await UploadService.publishFile(data);\r\n    if(response.data){\r\n       await this.setState({ publishInfo: [...this.state.publishInfo, {url:\"\", name:data}]});\r\n     }\r\n    else{\r\n      alert(\"Already Published. Publish new version?\");\r\n    }\r\n}\r\n\r\nasync delete(data)\r\n {\r\n    let response = UploadService.deleteFile(data);\r\n    response.then( e =>{if(e.data){\r\n      UploadService.getFiles().then((response) => {\r\n        this.setState({\r\n          fileInfos: response.data,\r\n        });\r\n      });\r\n    }\r\n  });\r\n }\r\n\r\n\r\n\r\n  render() {\r\n    const {\r\n      selectedFiles,\r\n      currentFile,\r\n      progress,\r\n      message,\r\n      fileInfos,\r\n      publishInfo\r\n    } = this.state;\r\n    console.table(publishInfo);\r\n      return (\r\n      <div>\r\n        {currentFile && progress!=100 &&(\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n              role=\"progressbar\"\r\n              aria-valuenow={progress}\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              style={{ width: progress + \"%\" }}\r\n            >\r\n              {progress}%\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"bar-upload\">\r\n        \r\n          <input type=\"file\" onChange={this.selectFile} />\r\n          <button className=\"button3\"   disabled={!selectedFiles} onClick={this.upload} >\r\n          Upload\r\n        </button>\r\n        \r\n       \r\n    </div>\r\n        <div className=\"alert alert-light\" role=\"alert\">\r\n          {message}\r\n        </div>\r\n\r\n        <div className=\"card-upload\">\r\n          <div className=\"card-header\">List of Files</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {fileInfos &&\r\n              fileInfos.map((file, index) => (\r\n                <div className=\"bar-upload\">\r\n                <li className=\"list-group-item\" key={index}>\r\n                  { \r\n                  publishInfo.map(e=>e.name ==file.name).includes(true)?  \r\n                                <div className=\"led-box\"> <div className=\"led-green\"></div></div>\r\n                                :<div className=\"led-box\"> <div className=\"led-grey\"></div></div>}\r\n                  <a className=\"a-upload\" onClick={this.clickView}>{file.name}</a>\r\n                  <a className=\"button1\"  onClick={()=>this.publish(file.name)}>Publish </a>\r\n                  <a className=\"button1\"  onClick={()=>this.delete(file.name)}>Delete </a>\r\n                 </li>\r\n                </div>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport React from 'react';\r\nimport './example.css';\r\n\r\nexport default function Example(props: any): React.ReactElement {\r\n  return (\r\n    <div className=\"example\">\r\n      <div className=\"title\">{props.title}</div>\r\n      <div className=\"demo\">{props.children}</div>\r\n    </div>\r\n  );\r\n}","/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport React from 'react';\r\nimport Example from './example';\r\nimport GooglePayButton from '@google-pay/button-react';\r\n\r\nexport default function BasicExample(props: any): React.ReactElement {\r\n  return (\r\n    <Example title=\"Mastercard and VISA\">\r\n      <GooglePayButton\r\n        environment=\"TEST\"\r\n        paymentRequest={{\r\n          apiVersion: 2,\r\n          apiVersionMinor: 0,\r\n          allowedPaymentMethods: [\r\n            {\r\n              type: 'CARD',\r\n              parameters: {\r\n                allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\r\n                allowedCardNetworks: ['MASTERCARD', 'VISA'],\r\n              },\r\n              tokenizationSpecification: {\r\n                type: 'PAYMENT_GATEWAY',\r\n                parameters: {\r\n                  gateway: 'example',\r\n                  gatewayMerchantId: 'exampleGatewayMerchantId',\r\n                },\r\n              },\r\n            },\r\n          ],\r\n          merchantInfo: {\r\n            merchantId: '12345678901234567890',\r\n            merchantName: 'Demo Merchant',\r\n          },\r\n          transactionInfo: {\r\n            totalPriceStatus: 'FINAL',\r\n            totalPriceLabel: 'Total',\r\n            totalPrice: props.amount,\r\n            currencyCode: 'USD',\r\n            countryCode: 'US',\r\n          },\r\n        }}\r\n        onLoadPaymentData={paymentRequest => {\r\n          console.log('Success', paymentRequest);\r\n        }}\r\n        existingPaymentMethodRequired={props.existingPaymentMethodRequired}\r\n        buttonColor={props.buttonColor}\r\n        buttonType={props.buttonType}\r\n      />\r\n    </Example>\r\n  );\r\n}","/**\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport './payment.css';\r\nimport BasicExample from './basic.example';\r\n\r\n\r\nconst GooglePayment: React.FC = () => {\r\n  const [amount, setAmount] = useState('100.00');\r\n  const [existingPaymentMethodRequired, setExistingPaymentMethodRequired] = useState(false);\r\n  const [buttonColor, setButtonColor] = useState('default');\r\n  const [buttonType, setButtonType] = useState('buy');\r\n\r\n  function handleAmountChange(event: any) {\r\n    setAmount(event.target.value);\r\n  }\r\n\r\n  function handleExistingPaymentMethodRequired(event: any) {\r\n    setExistingPaymentMethodRequired(event.target.value === 'yes');\r\n  }\r\n\r\n  function handleColorChange(event: any) {\r\n    setButtonColor(event.target.value);\r\n  }\r\n\r\n  function handleTypeChange(event: any) {\r\n    setButtonType(event.target.value);\r\n  }\r\n\r\n  const props = {\r\n    amount,\r\n    existingPaymentMethodRequired,\r\n    buttonColor: buttonColor,\r\n    buttonType: buttonType,\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"params\">\r\n        <label>\r\n          <span>Default amount:</span>\r\n          <input type=\"text\" defaultValue={amount} onBlur={handleAmountChange} />\r\n        </label>\r\n        <label>\r\n          <span>Payment method required:</span>\r\n          <select onChange={handleExistingPaymentMethodRequired} value={existingPaymentMethodRequired ? 'yes' : 'no'}>\r\n            <option value=\"no\">No</option>\r\n            <option value=\"yes\">Yes</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          <span>Button color:</span>\r\n          <select onChange={handleColorChange} value={buttonColor}>\r\n            <option value=\"default\">default</option>\r\n            <option value=\"black\">black</option>\r\n            <option value=\"white\">white</option>\r\n          </select>\r\n        </label>\r\n        <label>\r\n          <span>Button type:</span>\r\n          <select onChange={handleTypeChange} value={buttonType}>\r\n            <option value=\"buy\">buy</option>\r\n            <option value=\"plain\">plain</option>\r\n            <option value=\"donate\">donate</option>\r\n            <option value=\"long\">long</option>\r\n            <option value=\"short\">short</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <BasicExample {...props} />\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GooglePayment;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Events from \"./components/events.component\";\r\nimport CSLContainer from './charts/CSLContainer';\r\n\r\nimport { logout } from \"./actions/auth\";\r\nimport { clearMessage } from \"./actions/message\";\r\n\r\nimport { history } from './helpers/history';\r\nimport UploadFiles from \"./upload/upload-files.component\";\r\n\r\nimport GooglePayment from \"./payment/payment.component\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n\r\n    history.listen((location) => {\r\n      props.dispatch(clearMessage()); // clear message when changing location\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = this.props.user;\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        \r\n      });\r\n    }\r\n  }\r\n  isLoggedIn()\r\n  {\r\n           return AuthService.isLoggedIn();\r\n  }\r\n\r\n\r\n\r\n  logOut() {\r\n    this.props.dispatch(logout());\r\n  }\r\n\r\n  render() {\r\n    let currentUser = localStorage.getItem(\"user\");\r\n    return (\r\n      <Router history={history}>\r\n        <div>\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n             Sid Blog\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/home\"} className=\"nav-link\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n\r\n            </div>\r\n\r\n            {currentUser ? (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <a href=\"/home\" className=\"nav-link\" onClick={this.logOut}>\r\n                    LogOut\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/upload\"} className=\"nav-link\">\r\n                    Upload\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/eventGrid\"} className=\"nav-link\">\r\n                    EventGrid\r\n                  </Link>\r\n                </li>\r\n              </div>\r\n            ) : (\r\n              <div className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/login\"} className=\"nav-link\">\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n                <div className=\"navbar-nav ml-auto\">\r\n                \r\n                <li className=\"nav-item\">\r\n                  <Link to={\"/register\"} className=\"nav-link\">\r\n                    Sign Up\r\n                  </Link>\r\n                </li>\r\n               \r\n                </div>\r\n\r\n               \r\n              </div>\r\n            )}\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              {currentUser ?<Route exact path=\"/upload\"   component={UploadFiles} />\r\n              :<Route exact path=\"/upload\"   component={Login} />}\r\n              {currentUser ?<Route exact path=\"/eventGrid\"   component={Events} />\r\n              :<Route exact path=\"/eventGrid\"   component={Login} />}\r\n              \r\n              <Route exact path=\"/d3\" component = {CSLContainer} />\r\n              <Route exact path=\"/payment\" component = {GooglePayment} />\r\n            \r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can chađinge\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}